/*
 * generated by Xtext 2.18.0.M3
 */
grammar InternalFitLang;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package cz.cuni.mff.fitoptivis.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package cz.cuni.mff.fitoptivis.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import cz.cuni.mff.fitoptivis.services.FitLangGrammarAccess;

}
@parser::members {
	private FitLangGrammarAccess grammarAccess;

	public void setGrammarAccess(FitLangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getElementsAssignment()); }
		(rule__Model__ElementsAssignment)*
		{ after(grammarAccess.getModelAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison_Operator
entryRuleComparison_Operator
:
{ before(grammarAccess.getComparison_OperatorRule()); }
	 ruleComparison_Operator
{ after(grammarAccess.getComparison_OperatorRule()); } 
	 EOF 
;

// Rule Comparison_Operator
ruleComparison_Operator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparison_OperatorAccess().getAlternatives()); }
		(rule__Comparison_Operator__Alternatives)
		{ after(grammarAccess.getComparison_OperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogical_Binary_Operator
entryRuleLogical_Binary_Operator
:
{ before(grammarAccess.getLogical_Binary_OperatorRule()); }
	 ruleLogical_Binary_Operator
{ after(grammarAccess.getLogical_Binary_OperatorRule()); } 
	 EOF 
;

// Rule Logical_Binary_Operator
ruleLogical_Binary_Operator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogical_Binary_OperatorAccess().getAlternatives()); }
		(rule__Logical_Binary_Operator__Alternatives)
		{ after(grammarAccess.getLogical_Binary_OperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicative_Operator
entryRuleMultiplicative_Operator
:
{ before(grammarAccess.getMultiplicative_OperatorRule()); }
	 ruleMultiplicative_Operator
{ after(grammarAccess.getMultiplicative_OperatorRule()); } 
	 EOF 
;

// Rule Multiplicative_Operator
ruleMultiplicative_Operator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicative_OperatorAccess().getAlternatives()); }
		(rule__Multiplicative_Operator__Alternatives)
		{ after(grammarAccess.getMultiplicative_OperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditive_Operator
entryRuleAdditive_Operator
:
{ before(grammarAccess.getAdditive_OperatorRule()); }
	 ruleAdditive_Operator
{ after(grammarAccess.getAdditive_OperatorRule()); } 
	 EOF 
;

// Rule Additive_Operator
ruleAdditive_Operator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditive_OperatorAccess().getAlternatives()); }
		(rule__Additive_Operator__Alternatives)
		{ after(grammarAccess.getAdditive_OperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnary_Operator
entryRuleUnary_Operator
:
{ before(grammarAccess.getUnary_OperatorRule()); }
	 ruleUnary_Operator
{ after(grammarAccess.getUnary_OperatorRule()); } 
	 EOF 
;

// Rule Unary_Operator
ruleUnary_Operator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnary_OperatorAccess().getAlternatives()); }
		(rule__Unary_Operator__Alternatives)
		{ after(grammarAccess.getUnary_OperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponent
entryRuleComponent
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentAccess().getGroup()); }
		(rule__Component__Group__0)
		{ after(grammarAccess.getComponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBudget
entryRuleBudget
:
{ before(grammarAccess.getBudgetRule()); }
	 ruleBudget
{ after(grammarAccess.getBudgetRule()); } 
	 EOF 
;

// Rule Budget
ruleBudget 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBudgetAccess().getGroup()); }
		(rule__Budget__Group__0)
		{ after(grammarAccess.getBudgetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataChannel
entryRuleDataChannel
:
{ before(grammarAccess.getDataChannelRule()); }
	 ruleDataChannel
{ after(grammarAccess.getDataChannelRule()); } 
	 EOF 
;

// Rule DataChannel
ruleDataChannel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataChannelAccess().getGroup()); }
		(rule__DataChannel__Group__0)
		{ after(grammarAccess.getDataChannelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSystem
entryRuleSystem
:
{ before(grammarAccess.getSystemRule()); }
	 ruleSystem
{ after(grammarAccess.getSystemRule()); } 
	 EOF 
;

// Rule System
ruleSystem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSystemAccess().getGroup()); }
		(rule__System__Group__0)
		{ after(grammarAccess.getSystemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleQualityDef
entryRuleSingleQualityDef
:
{ before(grammarAccess.getSingleQualityDefRule()); }
	 ruleSingleQualityDef
{ after(grammarAccess.getSingleQualityDefRule()); } 
	 EOF 
;

// Rule SingleQualityDef
ruleSingleQualityDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleQualityDefAccess().getGroup()); }
		(rule__SingleQualityDef__Group__0)
		{ after(grammarAccess.getSingleQualityDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentRules
entryRuleComponentRules
:
{ before(grammarAccess.getComponentRulesRule()); }
	 ruleComponentRules
{ after(grammarAccess.getComponentRulesRule()); } 
	 EOF 
;

// Rule ComponentRules
ruleComponentRules 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentRulesAccess().getAlternatives()); }
		(rule__ComponentRules__Alternatives)
		{ after(grammarAccess.getComponentRulesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfigurations
entryRuleConfigurations
:
{ before(grammarAccess.getConfigurationsRule()); }
	 ruleConfigurations
{ after(grammarAccess.getConfigurationsRule()); } 
	 EOF 
;

// Rule Configurations
ruleConfigurations 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getConfigurationsAccess().getConfigurationAssignment()); }
			(rule__Configurations__ConfigurationAssignment)
			{ after(grammarAccess.getConfigurationsAccess().getConfigurationAssignment()); }
		)
		(
			{ before(grammarAccess.getConfigurationsAccess().getConfigurationAssignment()); }
			(rule__Configurations__ConfigurationAssignment)*
			{ after(grammarAccess.getConfigurationsAccess().getConfigurationAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefaultConfiguration
entryRuleDefaultConfiguration
:
{ before(grammarAccess.getDefaultConfigurationRule()); }
	 ruleDefaultConfiguration
{ after(grammarAccess.getDefaultConfigurationRule()); } 
	 EOF 
;

// Rule DefaultConfiguration
ruleDefaultConfiguration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefaultConfigurationAccess().getGroup()); }
		(rule__DefaultConfiguration__Group__0)
		{ after(grammarAccess.getDefaultConfigurationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfiguration
entryRuleConfiguration
:
{ before(grammarAccess.getConfigurationRule()); }
	 ruleConfiguration
{ after(grammarAccess.getConfigurationRule()); } 
	 EOF 
;

// Rule Configuration
ruleConfiguration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigurationAccess().getGroup()); }
		(rule__Configuration__Group__0)
		{ after(grammarAccess.getConfigurationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfigurationBody
entryRuleConfigurationBody
:
{ before(grammarAccess.getConfigurationBodyRule()); }
	 ruleConfigurationBody
{ after(grammarAccess.getConfigurationBodyRule()); } 
	 EOF 
;

// Rule ConfigurationBody
ruleConfigurationBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigurationBodyAccess().getGroup()); }
		(rule__ConfigurationBody__Group__0)
		{ after(grammarAccess.getConfigurationBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSupportsPredicate
entryRuleSupportsPredicate
:
{ before(grammarAccess.getSupportsPredicateRule()); }
	 ruleSupportsPredicate
{ after(grammarAccess.getSupportsPredicateRule()); } 
	 EOF 
;

// Rule SupportsPredicate
ruleSupportsPredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSupportsPredicateAccess().getGroup()); }
		(rule__SupportsPredicate__Group__0)
		{ after(grammarAccess.getSupportsPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequiresPredicate
entryRuleRequiresPredicate
:
{ before(grammarAccess.getRequiresPredicateRule()); }
	 ruleRequiresPredicate
{ after(grammarAccess.getRequiresPredicateRule()); } 
	 EOF 
;

// Rule RequiresPredicate
ruleRequiresPredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequiresPredicateAccess().getGroup()); }
		(rule__RequiresPredicate__Group__0)
		{ after(grammarAccess.getRequiresPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputsPredicate
entryRuleInputsPredicate
:
{ before(grammarAccess.getInputsPredicateRule()); }
	 ruleInputsPredicate
{ after(grammarAccess.getInputsPredicateRule()); } 
	 EOF 
;

// Rule InputsPredicate
ruleInputsPredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputsPredicateAccess().getGroup()); }
		(rule__InputsPredicate__Group__0)
		{ after(grammarAccess.getInputsPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputsPredicate
entryRuleOutputsPredicate
:
{ before(grammarAccess.getOutputsPredicateRule()); }
	 ruleOutputsPredicate
{ after(grammarAccess.getOutputsPredicateRule()); } 
	 EOF 
;

// Rule OutputsPredicate
ruleOutputsPredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputsPredicateAccess().getGroup()); }
		(rule__OutputsPredicate__Group__0)
		{ after(grammarAccess.getOutputsPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicateBlock
entryRulePredicateBlock
:
{ before(grammarAccess.getPredicateBlockRule()); }
	 rulePredicateBlock
{ after(grammarAccess.getPredicateBlockRule()); } 
	 EOF 
;

// Rule PredicateBlock
rulePredicateBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateBlockAccess().getGroup()); }
		(rule__PredicateBlock__Group__0)
		{ after(grammarAccess.getPredicateBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndependentPredicate
entryRuleIndependentPredicate
:
{ before(grammarAccess.getIndependentPredicateRule()); }
	 ruleIndependentPredicate
{ after(grammarAccess.getIndependentPredicateRule()); } 
	 EOF 
;

// Rule IndependentPredicate
ruleIndependentPredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndependentPredicateAccess().getGroup()); }
		(rule__IndependentPredicate__Group__0)
		{ after(grammarAccess.getIndependentPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualityPredicate
entryRuleQualityPredicate
:
{ before(grammarAccess.getQualityPredicateRule()); }
	 ruleQualityPredicate
{ after(grammarAccess.getQualityPredicateRule()); } 
	 EOF 
;

// Rule QualityPredicate
ruleQualityPredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualityPredicateAccess().getQualityDeclarationParserRuleCall()); }
		ruleQualityDeclaration
		{ after(grammarAccess.getQualityPredicateAccess().getQualityDeclarationParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubComponentPredicate
entryRuleSubComponentPredicate
:
{ before(grammarAccess.getSubComponentPredicateRule()); }
	 ruleSubComponentPredicate
{ after(grammarAccess.getSubComponentPredicateRule()); } 
	 EOF 
;

// Rule SubComponentPredicate
ruleSubComponentPredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubComponentPredicateAccess().getGroup()); }
		(rule__SubComponentPredicate__Group__0)
		{ after(grammarAccess.getSubComponentPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualityDeclaration
entryRuleQualityDeclaration
:
{ before(grammarAccess.getQualityDeclarationRule()); }
	 ruleQualityDeclaration
{ after(grammarAccess.getQualityDeclarationRule()); } 
	 EOF 
;

// Rule QualityDeclaration
ruleQualityDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualityDeclarationAccess().getGroup()); }
		(rule__QualityDeclaration__Group__0)
		{ after(grammarAccess.getQualityDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicate
entryRulePredicate
:
{ before(grammarAccess.getPredicateRule()); }
	 rulePredicate
{ after(grammarAccess.getPredicateRule()); } 
	 EOF 
;

// Rule Predicate
rulePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateAccess().getAlternatives()); }
		(rule__Predicate__Alternatives)
		{ after(grammarAccess.getPredicateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndPredicate
entryRuleAndPredicate
:
{ before(grammarAccess.getAndPredicateRule()); }
	 ruleAndPredicate
{ after(grammarAccess.getAndPredicateRule()); } 
	 EOF 
;

// Rule AndPredicate
ruleAndPredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndPredicateAccess().getGroup()); }
		(rule__AndPredicate__Group__0)
		{ after(grammarAccess.getAndPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrPredicate
entryRuleOrPredicate
:
{ before(grammarAccess.getOrPredicateRule()); }
	 ruleOrPredicate
{ after(grammarAccess.getOrPredicateRule()); } 
	 EOF 
;

// Rule OrPredicate
ruleOrPredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrPredicateAccess().getGroup()); }
		(rule__OrPredicate__Group__0)
		{ after(grammarAccess.getOrPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolExpression
entryRuleBoolExpression
:
{ before(grammarAccess.getBoolExpressionRule()); }
	 ruleBoolExpression
{ after(grammarAccess.getBoolExpressionRule()); } 
	 EOF 
;

// Rule BoolExpression
ruleBoolExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolExpressionAccess().getGroup()); }
		(rule__BoolExpression__Group__0)
		{ after(grammarAccess.getBoolExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonExpression
entryRuleComparisonExpression
:
{ before(grammarAccess.getComparisonExpressionRule()); }
	 ruleComparisonExpression
{ after(grammarAccess.getComparisonExpressionRule()); } 
	 EOF 
;

// Rule ComparisonExpression
ruleComparisonExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup()); }
		(rule__ComparisonExpression__Group__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionNotStartingWithQualityExpression
entryRuleExpressionNotStartingWithQualityExpression
:
{ before(grammarAccess.getExpressionNotStartingWithQualityExpressionRule()); }
	 ruleExpressionNotStartingWithQualityExpression
{ after(grammarAccess.getExpressionNotStartingWithQualityExpressionRule()); } 
	 EOF 
;

// Rule ExpressionNotStartingWithQualityExpression
ruleExpressionNotStartingWithQualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionNotStartingWithQualityExpressionAccess().getAlternatives()); }
		(rule__ExpressionNotStartingWithQualityExpression__Alternatives)
		{ after(grammarAccess.getExpressionNotStartingWithQualityExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubExpression
entryRuleSubExpression
:
{ before(grammarAccess.getSubExpressionRule()); }
	 ruleSubExpression
{ after(grammarAccess.getSubExpressionRule()); } 
	 EOF 
;

// Rule SubExpression
ruleSubExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubExpressionAccess().getAdditiveExpressionParserRuleCall()); }
		ruleAdditiveExpression
		{ after(grammarAccess.getSubExpressionAccess().getAdditiveExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubExpressionNotStartingWithQualityExpression
entryRuleSubExpressionNotStartingWithQualityExpression
:
{ before(grammarAccess.getSubExpressionNotStartingWithQualityExpressionRule()); }
	 ruleSubExpressionNotStartingWithQualityExpression
{ after(grammarAccess.getSubExpressionNotStartingWithQualityExpressionRule()); } 
	 EOF 
;

// Rule SubExpressionNotStartingWithQualityExpression
ruleSubExpressionNotStartingWithQualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubExpressionNotStartingWithQualityExpressionAccess().getAdditiveExpressionNotStartingWithQualityExpressionParserRuleCall()); }
		ruleAdditiveExpressionNotStartingWithQualityExpression
		{ after(grammarAccess.getSubExpressionNotStartingWithQualityExpressionAccess().getAdditiveExpressionNotStartingWithQualityExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
		(rule__AdditiveExpression__Group__0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpressionNotStartingWithQualityExpression
entryRuleAdditiveExpressionNotStartingWithQualityExpression
:
{ before(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionRule()); }
	 ruleAdditiveExpressionNotStartingWithQualityExpression
{ after(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpressionNotStartingWithQualityExpression
ruleAdditiveExpressionNotStartingWithQualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getGroup()); }
		(rule__AdditiveExpressionNotStartingWithQualityExpression__Group__0)
		{ after(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
		(rule__MultiplicativeExpression__Group__0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpressionNotStartingWithQualityExpression
entryRuleMultiplicativeExpressionNotStartingWithQualityExpression
:
{ before(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionRule()); }
	 ruleMultiplicativeExpressionNotStartingWithQualityExpression
{ after(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpressionNotStartingWithQualityExpression
ruleMultiplicativeExpressionNotStartingWithQualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getGroup()); }
		(rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group__0)
		{ after(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerm
entryRuleTerm
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getAlternatives()); }
		(rule__Term__Alternatives)
		{ after(grammarAccess.getTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNonQualityExpressionTerm
entryRuleNonQualityExpressionTerm
:
{ before(grammarAccess.getNonQualityExpressionTermRule()); }
	 ruleNonQualityExpressionTerm
{ after(grammarAccess.getNonQualityExpressionTermRule()); } 
	 EOF 
;

// Rule NonQualityExpressionTerm
ruleNonQualityExpressionTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNonQualityExpressionTermAccess().getAlternatives()); }
		(rule__NonQualityExpressionTerm__Alternatives)
		{ after(grammarAccess.getNonQualityExpressionTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCallExpression
entryRuleCallExpression
:
{ before(grammarAccess.getCallExpressionRule()); }
	 ruleCallExpression
{ after(grammarAccess.getCallExpressionRule()); } 
	 EOF 
;

// Rule CallExpression
ruleCallExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallExpressionAccess().getGroup()); }
		(rule__CallExpression__Group__0)
		{ after(grammarAccess.getCallExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInlineArrayExpression
entryRuleInlineArrayExpression
:
{ before(grammarAccess.getInlineArrayExpressionRule()); }
	 ruleInlineArrayExpression
{ after(grammarAccess.getInlineArrayExpressionRule()); } 
	 EOF 
;

// Rule InlineArrayExpression
ruleInlineArrayExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInlineArrayExpressionAccess().getGroup()); }
		(rule__InlineArrayExpression__Group__0)
		{ after(grammarAccess.getInlineArrayExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInlineObjectExpression
entryRuleInlineObjectExpression
:
{ before(grammarAccess.getInlineObjectExpressionRule()); }
	 ruleInlineObjectExpression
{ after(grammarAccess.getInlineObjectExpressionRule()); } 
	 EOF 
;

// Rule InlineObjectExpression
ruleInlineObjectExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInlineObjectExpressionAccess().getGroup()); }
		(rule__InlineObjectExpression__Group__0)
		{ after(grammarAccess.getInlineObjectExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyDeclaration
entryRulePropertyDeclaration
:
{ before(grammarAccess.getPropertyDeclarationRule()); }
	 rulePropertyDeclaration
{ after(grammarAccess.getPropertyDeclarationRule()); } 
	 EOF 
;

// Rule PropertyDeclaration
rulePropertyDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyDeclarationAccess().getGroup()); }
		(rule__PropertyDeclaration__Group__0)
		{ after(grammarAccess.getPropertyDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBracketedExpression
entryRuleBracketedExpression
:
{ before(grammarAccess.getBracketedExpressionRule()); }
	 ruleBracketedExpression
{ after(grammarAccess.getBracketedExpressionRule()); } 
	 EOF 
;

// Rule BracketedExpression
ruleBracketedExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBracketedExpressionAccess().getGroup()); }
		(rule__BracketedExpression__Group__0)
		{ after(grammarAccess.getBracketedExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getGroup()); }
		(rule__UnaryExpression__Group__0)
		{ after(grammarAccess.getUnaryExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualityExpression
entryRuleQualityExpression
:
{ before(grammarAccess.getQualityExpressionRule()); }
	 ruleQualityExpression
{ after(grammarAccess.getQualityExpressionRule()); } 
	 EOF 
;

// Rule QualityExpression
ruleQualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualityExpressionAccess().getGroup()); }
		(rule__QualityExpression__Group__0)
		{ after(grammarAccess.getQualityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayIndex
entryRuleArrayIndex
:
{ before(grammarAccess.getArrayIndexRule()); }
	 ruleArrayIndex
{ after(grammarAccess.getArrayIndexRule()); } 
	 EOF 
;

// Rule ArrayIndex
ruleArrayIndex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayIndexAccess().getGroup()); }
		(rule__ArrayIndex__Group__0)
		{ after(grammarAccess.getArrayIndexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntLiteral
entryRuleIntLiteral
:
{ before(grammarAccess.getIntLiteralRule()); }
	 ruleIntLiteral
{ after(grammarAccess.getIntLiteralRule()); } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
		(rule__IntLiteral__ValueAssignment)
		{ after(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getTextAssignment()); }
		(rule__StringLiteral__TextAssignment)
		{ after(grammarAccess.getStringLiteralAccess().getTextAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison_Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparison_OperatorAccess().getEqualsSignEqualsSignKeyword_0()); }
		'=='
		{ after(grammarAccess.getComparison_OperatorAccess().getEqualsSignEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparison_OperatorAccess().getLessThanSignKeyword_1()); }
		'<'
		{ after(grammarAccess.getComparison_OperatorAccess().getLessThanSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparison_OperatorAccess().getGreaterThanSignKeyword_2()); }
		'>'
		{ after(grammarAccess.getComparison_OperatorAccess().getGreaterThanSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparison_OperatorAccess().getLessThanSignEqualsSignKeyword_3()); }
		'<='
		{ after(grammarAccess.getComparison_OperatorAccess().getLessThanSignEqualsSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparison_OperatorAccess().getGreaterThanSignEqualsSignKeyword_4()); }
		'>='
		{ after(grammarAccess.getComparison_OperatorAccess().getGreaterThanSignEqualsSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparison_OperatorAccess().getExclamationMarkEqualsSignKeyword_5()); }
		'!='
		{ after(grammarAccess.getComparison_OperatorAccess().getExclamationMarkEqualsSignKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_Binary_Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogical_Binary_OperatorAccess().getAmpersandAmpersandKeyword_0()); }
		'&&'
		{ after(grammarAccess.getLogical_Binary_OperatorAccess().getAmpersandAmpersandKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogical_Binary_OperatorAccess().getVerticalLineVerticalLineKeyword_1()); }
		'||'
		{ after(grammarAccess.getLogical_Binary_OperatorAccess().getVerticalLineVerticalLineKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicative_OperatorAccess().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getMultiplicative_OperatorAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicative_OperatorAccess().getSolidusKeyword_1()); }
		'/'
		{ after(grammarAccess.getMultiplicative_OperatorAccess().getSolidusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditive_OperatorAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getAdditive_OperatorAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditive_OperatorAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getAdditive_OperatorAccess().getHyphenMinusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnary_OperatorAccess().getHyphenMinusKeyword_0()); }
		'-'
		{ after(grammarAccess.getUnary_OperatorAccess().getHyphenMinusKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_OperatorAccess().getPlusSignKeyword_1()); }
		'+'
		{ after(grammarAccess.getUnary_OperatorAccess().getPlusSignKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getComponentParserRuleCall_0()); }
		ruleComponent
		{ after(grammarAccess.getElementAccess().getComponentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getBudgetParserRuleCall_1()); }
		ruleBudget
		{ after(grammarAccess.getElementAccess().getBudgetParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getDataChannelParserRuleCall_2()); }
		ruleDataChannel
		{ after(grammarAccess.getElementAccess().getDataChannelParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getSystemParserRuleCall_3()); }
		ruleSystem
		{ after(grammarAccess.getElementAccess().getSystemParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getSubComponentsAssignment_3_0()); }
		(rule__System__SubComponentsAssignment_3_0)
		{ after(grammarAccess.getSystemAccess().getSubComponentsAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getSystemAccess().getIndependentPredicatesAssignment_3_1()); }
		(rule__System__IndependentPredicatesAssignment_3_1)
		{ after(grammarAccess.getSystemAccess().getIndependentPredicatesAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRules__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentRulesAccess().getConfigurationsParserRuleCall_0()); }
		ruleConfigurations
		{ after(grammarAccess.getComponentRulesAccess().getConfigurationsParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentRulesAccess().getDefaultConfigurationParserRuleCall_1()); }
		ruleDefaultConfiguration
		{ after(grammarAccess.getComponentRulesAccess().getDefaultConfigurationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationBody__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationBodyAccess().getSupportsAssignment_1_0()); }
		(rule__ConfigurationBody__SupportsAssignment_1_0)
		{ after(grammarAccess.getConfigurationBodyAccess().getSupportsAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getConfigurationBodyAccess().getRequiresAssignment_1_1()); }
		(rule__ConfigurationBody__RequiresAssignment_1_1)
		{ after(grammarAccess.getConfigurationBodyAccess().getRequiresAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getConfigurationBodyAccess().getInputsAssignment_1_2()); }
		(rule__ConfigurationBody__InputsAssignment_1_2)
		{ after(grammarAccess.getConfigurationBodyAccess().getInputsAssignment_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getConfigurationBodyAccess().getOutputsAssignment_1_3()); }
		(rule__ConfigurationBody__OutputsAssignment_1_3)
		{ after(grammarAccess.getConfigurationBodyAccess().getOutputsAssignment_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getConfigurationBodyAccess().getQualitiesAssignment_1_4()); }
		(rule__ConfigurationBody__QualitiesAssignment_1_4)
		{ after(grammarAccess.getConfigurationBodyAccess().getQualitiesAssignment_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getConfigurationBodyAccess().getIndependentPredicatesAssignment_1_5()); }
		(rule__ConfigurationBody__IndependentPredicatesAssignment_1_5)
		{ after(grammarAccess.getConfigurationBodyAccess().getIndependentPredicatesAssignment_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getConfigurationBodyAccess().getSubComponentsAssignment_1_6()); }
		(rule__ConfigurationBody__SubComponentsAssignment_1_6)
		{ after(grammarAccess.getConfigurationBodyAccess().getSubComponentsAssignment_1_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getAndPredicateParserRuleCall_0()); }
		ruleAndPredicate
		{ after(grammarAccess.getPredicateAccess().getAndPredicateParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateAccess().getOrPredicateParserRuleCall_1()); }
		ruleOrPredicate
		{ after(grammarAccess.getPredicateAccess().getOrPredicateParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateAccess().getGroup_2()); }
		(rule__Predicate__Group_2__0)
		{ after(grammarAccess.getPredicateAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateAccess().getGroup_3()); }
		(rule__Predicate__Group_3__0)
		{ after(grammarAccess.getPredicateAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Alternatives_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getAlternatives_2_1_0()); }
		(rule__Predicate__Alternatives_2_1_0)
		{ after(grammarAccess.getPredicateAccess().getAlternatives_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateAccess().getGroup_2_1_1()); }
		(rule__Predicate__Group_2_1_1__0)
		{ after(grammarAccess.getPredicateAccess().getGroup_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Alternatives_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getGroup_2_1_0_0()); }
		(rule__Predicate__Group_2_1_0_0__0)
		{ after(grammarAccess.getPredicateAccess().getGroup_2_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateAccess().getGroup_2_1_0_1()); }
		(rule__Predicate__Group_2_1_0_1__0)
		{ after(grammarAccess.getPredicateAccess().getGroup_2_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateAccess().getGroup_2_1_0_2()); }
		(rule__Predicate__Group_2_1_0_2__0)
		{ after(grammarAccess.getPredicateAccess().getGroup_2_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__ArrayAlternatives_2_1_0_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getArraySubExpressionParserRuleCall_2_1_0_0_2_0_0()); }
		ruleSubExpression
		{ after(grammarAccess.getPredicateAccess().getArraySubExpressionParserRuleCall_2_1_0_0_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateAccess().getArrayInlineArrayExpressionParserRuleCall_2_1_0_0_2_0_1()); }
		ruleInlineArrayExpression
		{ after(grammarAccess.getPredicateAccess().getArrayInlineArrayExpressionParserRuleCall_2_1_0_0_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getSubExpressionParserRuleCall_0()); }
		ruleSubExpression
		{ after(grammarAccess.getExpressionAccess().getSubExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getInlineArrayExpressionParserRuleCall_1()); }
		ruleInlineArrayExpression
		{ after(grammarAccess.getExpressionAccess().getInlineArrayExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getInlineObjectExpressionParserRuleCall_2()); }
		ruleInlineObjectExpression
		{ after(grammarAccess.getExpressionAccess().getInlineObjectExpressionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNotStartingWithQualityExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionNotStartingWithQualityExpressionAccess().getSubExpressionNotStartingWithQualityExpressionParserRuleCall_0()); }
		ruleSubExpressionNotStartingWithQualityExpression
		{ after(grammarAccess.getExpressionNotStartingWithQualityExpressionAccess().getSubExpressionNotStartingWithQualityExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionNotStartingWithQualityExpressionAccess().getInlineArrayExpressionParserRuleCall_1()); }
		ruleInlineArrayExpression
		{ after(grammarAccess.getExpressionNotStartingWithQualityExpressionAccess().getInlineArrayExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionNotStartingWithQualityExpressionAccess().getInlineObjectExpressionParserRuleCall_2()); }
		ruleInlineObjectExpression
		{ after(grammarAccess.getExpressionNotStartingWithQualityExpressionAccess().getInlineObjectExpressionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getBracketedExpressionParserRuleCall_0()); }
		ruleBracketedExpression
		{ after(grammarAccess.getTermAccess().getBracketedExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getUnaryExpressionParserRuleCall_1()); }
		ruleUnaryExpression
		{ after(grammarAccess.getTermAccess().getUnaryExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getQualityExpressionParserRuleCall_2()); }
		ruleQualityExpression
		{ after(grammarAccess.getTermAccess().getQualityExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getLiteralParserRuleCall_3()); }
		ruleLiteral
		{ after(grammarAccess.getTermAccess().getLiteralParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getCallExpressionParserRuleCall_4()); }
		ruleCallExpression
		{ after(grammarAccess.getTermAccess().getCallExpressionParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonQualityExpressionTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonQualityExpressionTermAccess().getBracketedExpressionParserRuleCall_0()); }
		ruleBracketedExpression
		{ after(grammarAccess.getNonQualityExpressionTermAccess().getBracketedExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNonQualityExpressionTermAccess().getUnaryExpressionParserRuleCall_1()); }
		ruleUnaryExpression
		{ after(grammarAccess.getNonQualityExpressionTermAccess().getUnaryExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getNonQualityExpressionTermAccess().getLiteralParserRuleCall_2()); }
		ruleLiteral
		{ after(grammarAccess.getNonQualityExpressionTermAccess().getLiteralParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getNonQualityExpressionTermAccess().getCallExpressionParserRuleCall_3()); }
		ruleCallExpression
		{ after(grammarAccess.getNonQualityExpressionTermAccess().getCallExpressionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualityExpressionAccess().getGroup_1_0()); }
		(rule__QualityExpression__Group_1_0__0)
		{ after(grammarAccess.getQualityExpressionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getQualityExpressionAccess().getGroup_1_1()); }
		(rule__QualityExpression__Group_1_1__0)
		{ after(grammarAccess.getQualityExpressionAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayIndex__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayIndexAccess().getArrayExprAssignment_1_0()); }
		(rule__ArrayIndex__ArrayExprAssignment_1_0)
		{ after(grammarAccess.getArrayIndexAccess().getArrayExprAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getArrayIndexAccess().getAnyIndexAssignment_1_1()); }
		(rule__ArrayIndex__AnyIndexAssignment_1_1)
		{ after(grammarAccess.getArrayIndexAccess().getAnyIndexAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_0()); }
		ruleIntLiteral
		{ after(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_1()); }
		ruleStringLiteral
		{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__0__Impl
	rule__Component__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getComponentKeyword_0()); }
	'component'
	{ after(grammarAccess.getComponentAccess().getComponentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__1__Impl
	rule__Component__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getNameAssignment_1()); }
	(rule__Component__NameAssignment_1)
	{ after(grammarAccess.getComponentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__2__Impl
	rule__Component__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__3__Impl
	rule__Component__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getComponentRulesAssignment_3()); }
	(rule__Component__ComponentRulesAssignment_3)
	{ after(grammarAccess.getComponentAccess().getComponentRulesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Budget__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Budget__Group__0__Impl
	rule__Budget__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Budget__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBudgetAccess().getBudgetKeyword_0()); }
	'budget'
	{ after(grammarAccess.getBudgetAccess().getBudgetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Budget__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Budget__Group__1__Impl
	rule__Budget__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Budget__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBudgetAccess().getNameAssignment_1()); }
	(rule__Budget__NameAssignment_1)
	{ after(grammarAccess.getBudgetAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Budget__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Budget__Group__2__Impl
	rule__Budget__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Budget__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBudgetAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getBudgetAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Budget__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Budget__Group__3__Impl
	rule__Budget__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Budget__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBudgetAccess().getQualityDefinitionsAssignment_3()); }
	(rule__Budget__QualityDefinitionsAssignment_3)*
	{ after(grammarAccess.getBudgetAccess().getQualityDefinitionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Budget__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Budget__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Budget__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBudgetAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getBudgetAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataChannel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataChannel__Group__0__Impl
	rule__DataChannel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataChannel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataChannelAccess().getChannelKeyword_0()); }
	'channel'
	{ after(grammarAccess.getDataChannelAccess().getChannelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataChannel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataChannel__Group__1__Impl
	rule__DataChannel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataChannel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataChannelAccess().getNameAssignment_1()); }
	(rule__DataChannel__NameAssignment_1)
	{ after(grammarAccess.getDataChannelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataChannel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataChannel__Group__2__Impl
	rule__DataChannel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataChannel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataChannelAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getDataChannelAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataChannel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataChannel__Group__3__Impl
	rule__DataChannel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataChannel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataChannelAccess().getQualityDefinitionsAssignment_3()); }
	(rule__DataChannel__QualityDefinitionsAssignment_3)*
	{ after(grammarAccess.getDataChannelAccess().getQualityDefinitionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataChannel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataChannel__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataChannel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataChannelAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getDataChannelAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__0__Impl
	rule__System__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getSystemKeyword_0()); }
	'system'
	{ after(grammarAccess.getSystemAccess().getSystemKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__1__Impl
	rule__System__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getNameAssignment_1()); }
	(rule__System__NameAssignment_1)
	{ after(grammarAccess.getSystemAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__2__Impl
	rule__System__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__3__Impl
	rule__System__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getAlternatives_3()); }
	(rule__System__Alternatives_3)*
	{ after(grammarAccess.getSystemAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleQualityDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleQualityDef__Group__0__Impl
	rule__SingleQualityDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleQualityDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleQualityDefAccess().getQualityKeyword_0()); }
	'quality'
	{ after(grammarAccess.getSingleQualityDefAccess().getQualityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleQualityDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleQualityDef__Group__1__Impl
	rule__SingleQualityDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleQualityDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleQualityDefAccess().getNameAssignment_1()); }
	(rule__SingleQualityDef__NameAssignment_1)
	{ after(grammarAccess.getSingleQualityDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleQualityDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleQualityDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleQualityDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleQualityDefAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getSingleQualityDefAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultConfiguration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultConfiguration__Group__0__Impl
	rule__DefaultConfiguration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultConfiguration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultConfigurationAccess().getConfigurationAction_0()); }
	()
	{ after(grammarAccess.getDefaultConfigurationAccess().getConfigurationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultConfiguration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultConfiguration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultConfiguration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultConfigurationAccess().getConfigBodyAssignment_1()); }
	(rule__DefaultConfiguration__ConfigBodyAssignment_1)
	{ after(grammarAccess.getDefaultConfigurationAccess().getConfigBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Configuration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group__0__Impl
	rule__Configuration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getConfigurationKeyword_0()); }
	'configuration'
	{ after(grammarAccess.getConfigurationAccess().getConfigurationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group__1__Impl
	rule__Configuration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getNameAssignment_1()); }
	(rule__Configuration__NameAssignment_1)
	{ after(grammarAccess.getConfigurationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group__2__Impl
	rule__Configuration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group__3__Impl
	rule__Configuration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getConfigBodyAssignment_3()); }
	(rule__Configuration__ConfigBodyAssignment_3)
	{ after(grammarAccess.getConfigurationAccess().getConfigBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigurationBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigurationBody__Group__0__Impl
	rule__ConfigurationBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationBodyAccess().getConfigurationBodyAction_0()); }
	()
	{ after(grammarAccess.getConfigurationBodyAccess().getConfigurationBodyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigurationBody__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationBodyAccess().getAlternatives_1()); }
	(rule__ConfigurationBody__Alternatives_1)*
	{ after(grammarAccess.getConfigurationBodyAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SupportsPredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportsPredicate__Group__0__Impl
	rule__SupportsPredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsPredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportsPredicateAccess().getSupportsKeyword_0()); }
	'supports'
	{ after(grammarAccess.getSupportsPredicateAccess().getSupportsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsPredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportsPredicate__Group__1__Impl
	rule__SupportsPredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsPredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportsPredicateAccess().getEnvironmentAssignment_1()); }
	(rule__SupportsPredicate__EnvironmentAssignment_1)
	{ after(grammarAccess.getSupportsPredicateAccess().getEnvironmentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsPredicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportsPredicate__Group__2__Impl
	rule__SupportsPredicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsPredicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportsPredicateAccess().getNameAssignment_2()); }
	(rule__SupportsPredicate__NameAssignment_2)
	{ after(grammarAccess.getSupportsPredicateAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsPredicate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportsPredicate__Group__3__Impl
	rule__SupportsPredicate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsPredicate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportsPredicateAccess().getArrayAssignment_3()); }
	(rule__SupportsPredicate__ArrayAssignment_3)?
	{ after(grammarAccess.getSupportsPredicateAccess().getArrayAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsPredicate__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportsPredicate__Group__4__Impl
	rule__SupportsPredicate__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsPredicate__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportsPredicateAccess().getPredicatesAssignment_4()); }
	(rule__SupportsPredicate__PredicatesAssignment_4)?
	{ after(grammarAccess.getSupportsPredicateAccess().getPredicatesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsPredicate__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportsPredicate__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsPredicate__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportsPredicateAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getSupportsPredicateAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequiresPredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequiresPredicate__Group__0__Impl
	rule__RequiresPredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresPredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequiresPredicateAccess().getRequiresKeyword_0()); }
	'requires'
	{ after(grammarAccess.getRequiresPredicateAccess().getRequiresKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresPredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequiresPredicate__Group__1__Impl
	rule__RequiresPredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresPredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequiresPredicateAccess().getEnvironmentAssignment_1()); }
	(rule__RequiresPredicate__EnvironmentAssignment_1)
	{ after(grammarAccess.getRequiresPredicateAccess().getEnvironmentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresPredicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequiresPredicate__Group__2__Impl
	rule__RequiresPredicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresPredicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequiresPredicateAccess().getNameAssignment_2()); }
	(rule__RequiresPredicate__NameAssignment_2)
	{ after(grammarAccess.getRequiresPredicateAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresPredicate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequiresPredicate__Group__3__Impl
	rule__RequiresPredicate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresPredicate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequiresPredicateAccess().getArrayAssignment_3()); }
	(rule__RequiresPredicate__ArrayAssignment_3)?
	{ after(grammarAccess.getRequiresPredicateAccess().getArrayAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresPredicate__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequiresPredicate__Group__4__Impl
	rule__RequiresPredicate__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresPredicate__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequiresPredicateAccess().getPredicatesAssignment_4()); }
	(rule__RequiresPredicate__PredicatesAssignment_4)?
	{ after(grammarAccess.getRequiresPredicateAccess().getPredicatesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresPredicate__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequiresPredicate__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresPredicate__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequiresPredicateAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getRequiresPredicateAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputsPredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputsPredicate__Group__0__Impl
	rule__InputsPredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputsPredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsPredicateAccess().getInputsKeyword_0()); }
	'inputs'
	{ after(grammarAccess.getInputsPredicateAccess().getInputsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputsPredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputsPredicate__Group__1__Impl
	rule__InputsPredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputsPredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsPredicateAccess().getChannelAssignment_1()); }
	(rule__InputsPredicate__ChannelAssignment_1)
	{ after(grammarAccess.getInputsPredicateAccess().getChannelAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputsPredicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputsPredicate__Group__2__Impl
	rule__InputsPredicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InputsPredicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsPredicateAccess().getNameAssignment_2()); }
	(rule__InputsPredicate__NameAssignment_2)
	{ after(grammarAccess.getInputsPredicateAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputsPredicate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputsPredicate__Group__3__Impl
	rule__InputsPredicate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InputsPredicate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsPredicateAccess().getArrayAssignment_3()); }
	(rule__InputsPredicate__ArrayAssignment_3)?
	{ after(grammarAccess.getInputsPredicateAccess().getArrayAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputsPredicate__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputsPredicate__Group__4__Impl
	rule__InputsPredicate__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InputsPredicate__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsPredicateAccess().getPredicatesAssignment_4()); }
	(rule__InputsPredicate__PredicatesAssignment_4)?
	{ after(grammarAccess.getInputsPredicateAccess().getPredicatesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputsPredicate__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputsPredicate__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputsPredicate__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsPredicateAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getInputsPredicateAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputsPredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputsPredicate__Group__0__Impl
	rule__OutputsPredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputsPredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputsPredicateAccess().getOutputsKeyword_0()); }
	'outputs'
	{ after(grammarAccess.getOutputsPredicateAccess().getOutputsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputsPredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputsPredicate__Group__1__Impl
	rule__OutputsPredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputsPredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputsPredicateAccess().getChannelAssignment_1()); }
	(rule__OutputsPredicate__ChannelAssignment_1)
	{ after(grammarAccess.getOutputsPredicateAccess().getChannelAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputsPredicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputsPredicate__Group__2__Impl
	rule__OutputsPredicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputsPredicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputsPredicateAccess().getNameAssignment_2()); }
	(rule__OutputsPredicate__NameAssignment_2)
	{ after(grammarAccess.getOutputsPredicateAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputsPredicate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputsPredicate__Group__3__Impl
	rule__OutputsPredicate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputsPredicate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputsPredicateAccess().getArrayAssignment_3()); }
	(rule__OutputsPredicate__ArrayAssignment_3)?
	{ after(grammarAccess.getOutputsPredicateAccess().getArrayAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputsPredicate__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputsPredicate__Group__4__Impl
	rule__OutputsPredicate__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputsPredicate__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputsPredicateAccess().getPredicatesAssignment_4()); }
	(rule__OutputsPredicate__PredicatesAssignment_4)?
	{ after(grammarAccess.getOutputsPredicateAccess().getPredicatesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputsPredicate__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputsPredicate__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputsPredicate__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputsPredicateAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getOutputsPredicateAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PredicateBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateBlock__Group__0__Impl
	rule__PredicateBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateBlockAccess().getPredicateBlockAction_0()); }
	()
	{ after(grammarAccess.getPredicateBlockAccess().getPredicateBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateBlock__Group__1__Impl
	rule__PredicateBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getPredicateBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateBlock__Group__2__Impl
	rule__PredicateBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateBlockAccess().getGroup_2()); }
	(rule__PredicateBlock__Group_2__0)?
	{ after(grammarAccess.getPredicateBlockAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateBlockAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getPredicateBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PredicateBlock__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateBlock__Group_2__0__Impl
	rule__PredicateBlock__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateBlock__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateBlockAccess().getPredicatesAssignment_2_0()); }
	(rule__PredicateBlock__PredicatesAssignment_2_0)
	{ after(grammarAccess.getPredicateBlockAccess().getPredicatesAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateBlock__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateBlock__Group_2__1__Impl
	rule__PredicateBlock__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateBlock__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateBlockAccess().getGroup_2_1()); }
	(rule__PredicateBlock__Group_2_1__0)*
	{ after(grammarAccess.getPredicateBlockAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateBlock__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateBlock__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateBlock__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateBlockAccess().getSemicolonKeyword_2_2()); }
	(';')?
	{ after(grammarAccess.getPredicateBlockAccess().getSemicolonKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PredicateBlock__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateBlock__Group_2_1__0__Impl
	rule__PredicateBlock__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateBlock__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateBlockAccess().getSemicolonKeyword_2_1_0()); }
	';'
	{ after(grammarAccess.getPredicateBlockAccess().getSemicolonKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateBlock__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateBlock__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateBlock__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateBlockAccess().getPredicatesAssignment_2_1_1()); }
	(rule__PredicateBlock__PredicatesAssignment_2_1_1)
	{ after(grammarAccess.getPredicateBlockAccess().getPredicatesAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndependentPredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndependentPredicate__Group__0__Impl
	rule__IndependentPredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndependentPredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndependentPredicateAccess().getPredicateParserRuleCall_0()); }
	rulePredicate
	{ after(grammarAccess.getIndependentPredicateAccess().getPredicateParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndependentPredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndependentPredicate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndependentPredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndependentPredicateAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getIndependentPredicateAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubComponentPredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubComponentPredicate__Group__0__Impl
	rule__SubComponentPredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponentPredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubComponentPredicateAccess().getComponentKeyword_0()); }
	'component'
	{ after(grammarAccess.getSubComponentPredicateAccess().getComponentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponentPredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubComponentPredicate__Group__1__Impl
	rule__SubComponentPredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponentPredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubComponentPredicateAccess().getTypeAssignment_1()); }
	(rule__SubComponentPredicate__TypeAssignment_1)
	{ after(grammarAccess.getSubComponentPredicateAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponentPredicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubComponentPredicate__Group__2__Impl
	rule__SubComponentPredicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponentPredicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubComponentPredicateAccess().getGroup_2()); }
	(rule__SubComponentPredicate__Group_2__0)?
	{ after(grammarAccess.getSubComponentPredicateAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponentPredicate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubComponentPredicate__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponentPredicate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubComponentPredicateAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getSubComponentPredicateAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubComponentPredicate__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubComponentPredicate__Group_2__0__Impl
	rule__SubComponentPredicate__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponentPredicate__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubComponentPredicateAccess().getNameAssignment_2_0()); }
	(rule__SubComponentPredicate__NameAssignment_2_0)
	{ after(grammarAccess.getSubComponentPredicateAccess().getNameAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponentPredicate__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubComponentPredicate__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponentPredicate__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubComponentPredicateAccess().getArrayAssignment_2_1()); }
	(rule__SubComponentPredicate__ArrayAssignment_2_1)?
	{ after(grammarAccess.getSubComponentPredicateAccess().getArrayAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualityDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityDeclaration__Group__0__Impl
	rule__QualityDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityDeclarationAccess().getQualityKeyword_0()); }
	'quality'
	{ after(grammarAccess.getQualityDeclarationAccess().getQualityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityDeclaration__Group__1__Impl
	rule__QualityDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityDeclarationAccess().getNameAssignment_1()); }
	(rule__QualityDeclaration__NameAssignment_1)
	{ after(grammarAccess.getQualityDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityDeclaration__Group__2__Impl
	rule__QualityDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityDeclarationAccess().getGroup_2()); }
	(rule__QualityDeclaration__Group_2__0)?
	{ after(grammarAccess.getQualityDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityDeclarationAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getQualityDeclarationAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualityDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityDeclaration__Group_2__0__Impl
	rule__QualityDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityDeclarationAccess().getEqualsSignKeyword_2_0()); }
	'='
	{ after(grammarAccess.getQualityDeclarationAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityDeclarationAccess().getExprAssignment_2_1()); }
	(rule__QualityDeclaration__ExprAssignment_2_1)
	{ after(grammarAccess.getQualityDeclarationAccess().getExprAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2__0__Impl
	rule__Predicate__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getQualityExpressionParserRuleCall_2_0()); }
	ruleQualityExpression
	{ after(grammarAccess.getPredicateAccess().getQualityExpressionParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getAlternatives_2_1()); }
	(rule__Predicate__Alternatives_2_1)
	{ after(grammarAccess.getPredicateAccess().getAlternatives_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_2_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_0_0__0__Impl
	rule__Predicate__Group_2_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getInPredicateQualityAction_2_1_0_0_0()); }
	()
	{ after(grammarAccess.getPredicateAccess().getInPredicateQualityAction_2_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_0_0__1__Impl
	rule__Predicate__Group_2_1_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getInKeyword_2_1_0_0_1()); }
	'in'
	{ after(grammarAccess.getPredicateAccess().getInKeyword_2_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getArrayAssignment_2_1_0_0_2()); }
	(rule__Predicate__ArrayAssignment_2_1_0_0_2)
	{ after(grammarAccess.getPredicateAccess().getArrayAssignment_2_1_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_2_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_0_1__0__Impl
	rule__Predicate__Group_2_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getRunsOnPredicateGuestAction_2_1_0_1_0()); }
	()
	{ after(grammarAccess.getPredicateAccess().getRunsOnPredicateGuestAction_2_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_0_1__1__Impl
	rule__Predicate__Group_2_1_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getRunsKeyword_2_1_0_1_1()); }
	'runs'
	{ after(grammarAccess.getPredicateAccess().getRunsKeyword_2_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_0_1__2__Impl
	rule__Predicate__Group_2_1_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getOnKeyword_2_1_0_1_2()); }
	'on'
	{ after(grammarAccess.getPredicateAccess().getOnKeyword_2_1_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getHostAssignment_2_1_0_1_3()); }
	(rule__Predicate__HostAssignment_2_1_0_1_3)
	{ after(grammarAccess.getPredicateAccess().getHostAssignment_2_1_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_2_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_0_2__0__Impl
	rule__Predicate__Group_2_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getOutputsToPredicateProducerAction_2_1_0_2_0()); }
	()
	{ after(grammarAccess.getPredicateAccess().getOutputsToPredicateProducerAction_2_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_0_2__1__Impl
	rule__Predicate__Group_2_1_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getOutputsKeyword_2_1_0_2_1()); }
	'outputs'
	{ after(grammarAccess.getPredicateAccess().getOutputsKeyword_2_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_0_2__2__Impl
	rule__Predicate__Group_2_1_0_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getToKeyword_2_1_0_2_2()); }
	'to'
	{ after(grammarAccess.getPredicateAccess().getToKeyword_2_1_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_0_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_0_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getConsumerAssignment_2_1_0_2_3()); }
	(rule__Predicate__ConsumerAssignment_2_1_0_2_3)
	{ after(grammarAccess.getPredicateAccess().getConsumerAssignment_2_1_0_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1__0__Impl
	rule__Predicate__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getGroup_2_1_1_0()); }
	(rule__Predicate__Group_2_1_1_0__0)?
	{ after(grammarAccess.getPredicateAccess().getGroup_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1__1__Impl
	rule__Predicate__Group_2_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getGroup_2_1_1_1()); }
	(rule__Predicate__Group_2_1_1_1__0)?
	{ after(grammarAccess.getPredicateAccess().getGroup_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getGroup_2_1_1_2()); }
	(rule__Predicate__Group_2_1_1_2__0)
	{ after(grammarAccess.getPredicateAccess().getGroup_2_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_2_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_0__0__Impl
	rule__Predicate__Group_2_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getMultiplicativeExpressionLeftAction_2_1_1_0_0()); }
	()
	{ after(grammarAccess.getPredicateAccess().getMultiplicativeExpressionLeftAction_2_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_0__1__Impl
	rule__Predicate__Group_2_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getOpAssignment_2_1_1_0_1()); }
	(rule__Predicate__OpAssignment_2_1_1_0_1)
	{ after(grammarAccess.getPredicateAccess().getOpAssignment_2_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getRightAssignment_2_1_1_0_2()); }
	(rule__Predicate__RightAssignment_2_1_1_0_2)
	{ after(grammarAccess.getPredicateAccess().getRightAssignment_2_1_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_2_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_1__0__Impl
	rule__Predicate__Group_2_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getAdditiveExpressionLeftAction_2_1_1_1_0()); }
	()
	{ after(grammarAccess.getPredicateAccess().getAdditiveExpressionLeftAction_2_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_1__1__Impl
	rule__Predicate__Group_2_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getOpAssignment_2_1_1_1_1()); }
	(rule__Predicate__OpAssignment_2_1_1_1_1)
	{ after(grammarAccess.getPredicateAccess().getOpAssignment_2_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getRightAssignment_2_1_1_1_2()); }
	(rule__Predicate__RightAssignment_2_1_1_1_2)
	{ after(grammarAccess.getPredicateAccess().getRightAssignment_2_1_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_2_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_2__0__Impl
	rule__Predicate__Group_2_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getBoolExpressionLeftAction_2_1_1_2_0()); }
	()
	{ after(grammarAccess.getPredicateAccess().getBoolExpressionLeftAction_2_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_2__1__Impl
	rule__Predicate__Group_2_1_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getOpAssignment_2_1_1_2_1()); }
	(rule__Predicate__OpAssignment_2_1_1_2_1)
	{ after(grammarAccess.getPredicateAccess().getOpAssignment_2_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_2__2__Impl
	rule__Predicate__Group_2_1_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getRightAssignment_2_1_1_2_2()); }
	(rule__Predicate__RightAssignment_2_1_1_2_2)
	{ after(grammarAccess.getPredicateAccess().getRightAssignment_2_1_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getGroup_2_1_1_2_3()); }
	(rule__Predicate__Group_2_1_1_2_3__0)
	{ after(grammarAccess.getPredicateAccess().getGroup_2_1_1_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_2_1_1_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_2_3__0__Impl
	rule__Predicate__Group_2_1_1_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getGroup_2_1_1_2_3_0()); }
	(rule__Predicate__Group_2_1_1_2_3_0__0)?
	{ after(grammarAccess.getPredicateAccess().getGroup_2_1_1_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getGroup_2_1_1_2_3_1()); }
	(rule__Predicate__Group_2_1_1_2_3_1__0)?
	{ after(grammarAccess.getPredicateAccess().getGroup_2_1_1_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_2_1_1_2_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_2_3_0__0__Impl
	rule__Predicate__Group_2_1_1_2_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getBoolExpressionLeftAction_2_1_1_2_3_0_0()); }
	()
	{ after(grammarAccess.getPredicateAccess().getBoolExpressionLeftAction_2_1_1_2_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_2_3_0__1__Impl
	rule__Predicate__Group_2_1_1_2_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getOpAssignment_2_1_1_2_3_0_1()); }
	(rule__Predicate__OpAssignment_2_1_1_2_3_0_1)
	{ after(grammarAccess.getPredicateAccess().getOpAssignment_2_1_1_2_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2_3_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_2_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2_3_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getRightAssignment_2_1_1_2_3_0_2()); }
	(rule__Predicate__RightAssignment_2_1_1_2_3_0_2)
	{ after(grammarAccess.getPredicateAccess().getRightAssignment_2_1_1_2_3_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_2_1_1_2_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_2_3_1__0__Impl
	rule__Predicate__Group_2_1_1_2_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getImplicationPredicateAntecedentAction_2_1_1_2_3_1_0()); }
	()
	{ after(grammarAccess.getPredicateAccess().getImplicationPredicateAntecedentAction_2_1_1_2_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_2_3_1__1__Impl
	rule__Predicate__Group_2_1_1_2_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getEqualsSignGreaterThanSignKeyword_2_1_1_2_3_1_1()); }
	'=>'
	{ after(grammarAccess.getPredicateAccess().getEqualsSignGreaterThanSignKeyword_2_1_1_2_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_2_1_1_2_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_2_1_1_2_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getConsequentAssignment_2_1_1_2_3_1_2()); }
	(rule__Predicate__ConsequentAssignment_2_1_1_2_3_1_2)
	{ after(grammarAccess.getPredicateAccess().getConsequentAssignment_2_1_1_2_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_3__0__Impl
	rule__Predicate__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getExpressionNotStartingWithQualityExpressionParserRuleCall_3_0()); }
	ruleExpressionNotStartingWithQualityExpression
	{ after(grammarAccess.getPredicateAccess().getExpressionNotStartingWithQualityExpressionParserRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_3__1__Impl
	rule__Predicate__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getGroup_3_1()); }
	(rule__Predicate__Group_3_1__0)
	{ after(grammarAccess.getPredicateAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getGroup_3_2()); }
	(rule__Predicate__Group_3_2__0)?
	{ after(grammarAccess.getPredicateAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_3_1__0__Impl
	rule__Predicate__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getBoolExpressionLeftAction_3_1_0()); }
	()
	{ after(grammarAccess.getPredicateAccess().getBoolExpressionLeftAction_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_3_1__1__Impl
	rule__Predicate__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getOpAssignment_3_1_1()); }
	(rule__Predicate__OpAssignment_3_1_1)
	{ after(grammarAccess.getPredicateAccess().getOpAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getRightAssignment_3_1_2()); }
	(rule__Predicate__RightAssignment_3_1_2)
	{ after(grammarAccess.getPredicateAccess().getRightAssignment_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_3_2__0__Impl
	rule__Predicate__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getImplicationPredicateAntecedentAction_3_2_0()); }
	()
	{ after(grammarAccess.getPredicateAccess().getImplicationPredicateAntecedentAction_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_3_2__1__Impl
	rule__Predicate__Group_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getEqualsSignGreaterThanSignKeyword_3_2_1()); }
	'=>'
	{ after(grammarAccess.getPredicateAccess().getEqualsSignGreaterThanSignKeyword_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_3_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getConsequentAssignment_3_2_2()); }
	(rule__Predicate__ConsequentAssignment_3_2_2)
	{ after(grammarAccess.getPredicateAccess().getConsequentAssignment_3_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndPredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndPredicate__Group__0__Impl
	rule__AndPredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndPredicateAccess().getAllKeyword_0()); }
	'all'
	{ after(grammarAccess.getAndPredicateAccess().getAllKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndPredicate__Group__1__Impl
	rule__AndPredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndPredicateAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getAndPredicateAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndPredicate__Group__2__Impl
	rule__AndPredicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndPredicateAccess().getSubPredicatesAssignment_2()); }
	(rule__AndPredicate__SubPredicatesAssignment_2)
	{ after(grammarAccess.getAndPredicateAccess().getSubPredicatesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndPredicate__Group__3__Impl
	rule__AndPredicate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndPredicateAccess().getGroup_3()); }
	(rule__AndPredicate__Group_3__0)*
	{ after(grammarAccess.getAndPredicateAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndPredicate__Group__4__Impl
	rule__AndPredicate__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndPredicateAccess().getCommaKeyword_4()); }
	(',')?
	{ after(grammarAccess.getAndPredicateAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndPredicate__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndPredicateAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getAndPredicateAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndPredicate__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndPredicate__Group_3__0__Impl
	rule__AndPredicate__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndPredicateAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getAndPredicateAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndPredicate__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndPredicateAccess().getSubPredicatesAssignment_3_1()); }
	(rule__AndPredicate__SubPredicatesAssignment_3_1)
	{ after(grammarAccess.getAndPredicateAccess().getSubPredicatesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrPredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrPredicate__Group__0__Impl
	rule__OrPredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrPredicateAccess().getAnyKeyword_0()); }
	'any'
	{ after(grammarAccess.getOrPredicateAccess().getAnyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrPredicate__Group__1__Impl
	rule__OrPredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrPredicateAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getOrPredicateAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrPredicate__Group__2__Impl
	rule__OrPredicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrPredicateAccess().getSubPredicatesAssignment_2()); }
	(rule__OrPredicate__SubPredicatesAssignment_2)
	{ after(grammarAccess.getOrPredicateAccess().getSubPredicatesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrPredicate__Group__3__Impl
	rule__OrPredicate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrPredicateAccess().getGroup_3()); }
	(rule__OrPredicate__Group_3__0)*
	{ after(grammarAccess.getOrPredicateAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrPredicate__Group__4__Impl
	rule__OrPredicate__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrPredicateAccess().getCommaKeyword_4()); }
	(',')?
	{ after(grammarAccess.getOrPredicateAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrPredicate__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrPredicateAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getOrPredicateAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrPredicate__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrPredicate__Group_3__0__Impl
	rule__OrPredicate__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrPredicateAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getOrPredicateAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrPredicate__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrPredicateAccess().getSubPredicatesAssignment_3_1()); }
	(rule__OrPredicate__SubPredicatesAssignment_3_1)
	{ after(grammarAccess.getOrPredicateAccess().getSubPredicatesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExpression__Group__0__Impl
	rule__BoolExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExpressionAccess().getComparisonExpressionParserRuleCall_0()); }
	ruleComparisonExpression
	{ after(grammarAccess.getBoolExpressionAccess().getComparisonExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExpressionAccess().getGroup_1()); }
	(rule__BoolExpression__Group_1__0)*
	{ after(grammarAccess.getBoolExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExpression__Group_1__0__Impl
	rule__BoolExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExpressionAccess().getBoolExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBoolExpressionAccess().getBoolExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExpression__Group_1__1__Impl
	rule__BoolExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExpressionAccess().getOpAssignment_1_1()); }
	(rule__BoolExpression__OpAssignment_1_1)
	{ after(grammarAccess.getBoolExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExpressionAccess().getRightAssignment_1_2()); }
	(rule__BoolExpression__RightAssignment_1_2)
	{ after(grammarAccess.getBoolExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__0__Impl
	rule__ComparisonExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getLeftAssignment_0()); }
	(rule__ComparisonExpression__LeftAssignment_0)
	{ after(grammarAccess.getComparisonExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__1__Impl
	rule__ComparisonExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getOperatorAssignment_1()); }
	(rule__ComparisonExpression__OperatorAssignment_1)
	{ after(grammarAccess.getComparisonExpressionAccess().getOperatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getRightAssignment_2()); }
	(rule__ComparisonExpression__RightAssignment_2)
	{ after(grammarAccess.getComparisonExpressionAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
	{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
	(rule__AdditiveExpression__Group_1__0)*
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__1__Impl
	rule__AdditiveExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_1()); }
	(rule__AdditiveExpression__OpAssignment_1_1)
	{ after(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2()); }
	(rule__AdditiveExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpressionNotStartingWithQualityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpressionNotStartingWithQualityExpression__Group__0__Impl
	rule__AdditiveExpressionNotStartingWithQualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionNotStartingWithQualityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getMultiplicativeExpressionNotStartingWithQualityExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpressionNotStartingWithQualityExpression
	{ after(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getMultiplicativeExpressionNotStartingWithQualityExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionNotStartingWithQualityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpressionNotStartingWithQualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionNotStartingWithQualityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getGroup_1()); }
	(rule__AdditiveExpressionNotStartingWithQualityExpression__Group_1__0)*
	{ after(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpressionNotStartingWithQualityExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpressionNotStartingWithQualityExpression__Group_1__0__Impl
	rule__AdditiveExpressionNotStartingWithQualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionNotStartingWithQualityExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getAdditiveExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getAdditiveExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionNotStartingWithQualityExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpressionNotStartingWithQualityExpression__Group_1__1__Impl
	rule__AdditiveExpressionNotStartingWithQualityExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionNotStartingWithQualityExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getOpAssignment_1_1()); }
	(rule__AdditiveExpressionNotStartingWithQualityExpression__OpAssignment_1_1)
	{ after(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionNotStartingWithQualityExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpressionNotStartingWithQualityExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionNotStartingWithQualityExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getRightAssignment_1_2()); }
	(rule__AdditiveExpressionNotStartingWithQualityExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getTermParserRuleCall_0()); }
	ruleTerm
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
	(rule__MultiplicativeExpression__Group_1__0)*
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__1__Impl
	rule__MultiplicativeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_1()); }
	(rule__MultiplicativeExpression__OpAssignment_1_1)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
	(rule__MultiplicativeExpression__RightAssignment_1_2)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group__0__Impl
	rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getNonQualityExpressionTermParserRuleCall_0()); }
	ruleNonQualityExpressionTerm
	{ after(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getNonQualityExpressionTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getGroup_1()); }
	(rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group_1__0)*
	{ after(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group_1__0__Impl
	rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getMultiplicativeExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getMultiplicativeExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group_1__1__Impl
	rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getOpAssignment_1_1()); }
	(rule__MultiplicativeExpressionNotStartingWithQualityExpression__OpAssignment_1_1)
	{ after(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionNotStartingWithQualityExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getRightAssignment_1_2()); }
	(rule__MultiplicativeExpressionNotStartingWithQualityExpression__RightAssignment_1_2)
	{ after(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallExpression__Group__0__Impl
	rule__CallExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallExpressionAccess().getFunctionCallAssignment_0()); }
	(rule__CallExpression__FunctionCallAssignment_0)
	{ after(grammarAccess.getCallExpressionAccess().getFunctionCallAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallExpression__Group__1__Impl
	rule__CallExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallExpression__Group__2__Impl
	rule__CallExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallExpressionAccess().getGroup_2()); }
	(rule__CallExpression__Group_2__0)?
	{ after(grammarAccess.getCallExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallExpression__Group_2__0__Impl
	rule__CallExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallExpressionAccess().getParamsAssignment_2_0()); }
	(rule__CallExpression__ParamsAssignment_2_0)
	{ after(grammarAccess.getCallExpressionAccess().getParamsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallExpressionAccess().getGroup_2_1()); }
	(rule__CallExpression__Group_2_1__0)*
	{ after(grammarAccess.getCallExpressionAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpression__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallExpression__Group_2_1__0__Impl
	rule__CallExpression__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallExpressionAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getCallExpressionAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallExpression__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallExpressionAccess().getParamsAssignment_2_1_1()); }
	(rule__CallExpression__ParamsAssignment_2_1_1)
	{ after(grammarAccess.getCallExpressionAccess().getParamsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InlineArrayExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineArrayExpression__Group__0__Impl
	rule__InlineArrayExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineArrayExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineArrayExpressionAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getInlineArrayExpressionAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineArrayExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineArrayExpression__Group__1__Impl
	rule__InlineArrayExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineArrayExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineArrayExpressionAccess().getItemsAssignment_1()); }
	(rule__InlineArrayExpression__ItemsAssignment_1)
	{ after(grammarAccess.getInlineArrayExpressionAccess().getItemsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineArrayExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineArrayExpression__Group__2__Impl
	rule__InlineArrayExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineArrayExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineArrayExpressionAccess().getGroup_2()); }
	(rule__InlineArrayExpression__Group_2__0)*
	{ after(grammarAccess.getInlineArrayExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineArrayExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineArrayExpression__Group__3__Impl
	rule__InlineArrayExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineArrayExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineArrayExpressionAccess().getCommaKeyword_3()); }
	(',')?
	{ after(grammarAccess.getInlineArrayExpressionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineArrayExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineArrayExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineArrayExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineArrayExpressionAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getInlineArrayExpressionAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InlineArrayExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineArrayExpression__Group_2__0__Impl
	rule__InlineArrayExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineArrayExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineArrayExpressionAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getInlineArrayExpressionAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineArrayExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineArrayExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineArrayExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineArrayExpressionAccess().getItemsAssignment_2_1()); }
	(rule__InlineArrayExpression__ItemsAssignment_2_1)
	{ after(grammarAccess.getInlineArrayExpressionAccess().getItemsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InlineObjectExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineObjectExpression__Group__0__Impl
	rule__InlineObjectExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineObjectExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineObjectExpressionAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getInlineObjectExpressionAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineObjectExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineObjectExpression__Group__1__Impl
	rule__InlineObjectExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineObjectExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineObjectExpressionAccess().getPropertiesAssignment_1()); }
	(rule__InlineObjectExpression__PropertiesAssignment_1)
	{ after(grammarAccess.getInlineObjectExpressionAccess().getPropertiesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineObjectExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineObjectExpression__Group__2__Impl
	rule__InlineObjectExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineObjectExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineObjectExpressionAccess().getGroup_2()); }
	(rule__InlineObjectExpression__Group_2__0)*
	{ after(grammarAccess.getInlineObjectExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineObjectExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineObjectExpression__Group__3__Impl
	rule__InlineObjectExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineObjectExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineObjectExpressionAccess().getCommaKeyword_3()); }
	(',')?
	{ after(grammarAccess.getInlineObjectExpressionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineObjectExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineObjectExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineObjectExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineObjectExpressionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getInlineObjectExpressionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InlineObjectExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineObjectExpression__Group_2__0__Impl
	rule__InlineObjectExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineObjectExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineObjectExpressionAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getInlineObjectExpressionAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineObjectExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineObjectExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineObjectExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineObjectExpressionAccess().getPropertiesAssignment_2_1()); }
	(rule__InlineObjectExpression__PropertiesAssignment_2_1)
	{ after(grammarAccess.getInlineObjectExpressionAccess().getPropertiesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyDeclaration__Group__0__Impl
	rule__PropertyDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyDeclarationAccess().getNameAssignment_0()); }
	(rule__PropertyDeclaration__NameAssignment_0)
	{ after(grammarAccess.getPropertyDeclarationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyDeclaration__Group__1__Impl
	rule__PropertyDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyDeclarationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getPropertyDeclarationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyDeclarationAccess().getValueAssignment_2()); }
	(rule__PropertyDeclaration__ValueAssignment_2)
	{ after(grammarAccess.getPropertyDeclarationAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BracketedExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BracketedExpression__Group__0__Impl
	rule__BracketedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketedExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketedExpressionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getBracketedExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketedExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BracketedExpression__Group__1__Impl
	rule__BracketedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketedExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketedExpressionAccess().getExprAssignment_1()); }
	(rule__BracketedExpression__ExprAssignment_1)
	{ after(grammarAccess.getBracketedExpressionAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketedExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BracketedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketedExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketedExpressionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getBracketedExpressionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__0__Impl
	rule__UnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0()); }
	(rule__UnaryExpression__OpAssignment_0)
	{ after(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_1()); }
	(rule__UnaryExpression__ExprAssignment_1)
	{ after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityExpression__Group__0__Impl
	rule__QualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityExpressionAccess().getQualityNameAssignment_0()); }
	(rule__QualityExpression__QualityNameAssignment_0)
	{ after(grammarAccess.getQualityExpressionAccess().getQualityNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityExpressionAccess().getAlternatives_1()); }
	(rule__QualityExpression__Alternatives_1)*
	{ after(grammarAccess.getQualityExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualityExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityExpression__Group_1_0__0__Impl
	rule__QualityExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityExpressionAccess().getPropertyAccessExpressionObjectAction_1_0_0()); }
	()
	{ after(grammarAccess.getQualityExpressionAccess().getPropertyAccessExpressionObjectAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityExpression__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityExpression__Group_1_0__1__Impl
	rule__QualityExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityExpression__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityExpressionAccess().getFullStopKeyword_1_0_1()); }
	'.'
	{ after(grammarAccess.getQualityExpressionAccess().getFullStopKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityExpression__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityExpression__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityExpression__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityExpressionAccess().getPropertyNameAssignment_1_0_2()); }
	(rule__QualityExpression__PropertyNameAssignment_1_0_2)
	{ after(grammarAccess.getQualityExpressionAccess().getPropertyNameAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualityExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityExpression__Group_1_1__0__Impl
	rule__QualityExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityExpressionAccess().getArrayAccessExpressionArrayAction_1_1_0()); }
	()
	{ after(grammarAccess.getQualityExpressionAccess().getArrayAccessExpressionArrayAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityExpressionAccess().getIndexAssignment_1_1_1()); }
	(rule__QualityExpression__IndexAssignment_1_1_1)
	{ after(grammarAccess.getQualityExpressionAccess().getIndexAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayIndex__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayIndex__Group__0__Impl
	rule__ArrayIndex__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayIndex__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayIndexAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArrayIndexAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayIndex__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayIndex__Group__1__Impl
	rule__ArrayIndex__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayIndex__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayIndexAccess().getAlternatives_1()); }
	(rule__ArrayIndex__Alternatives_1)
	{ after(grammarAccess.getArrayIndexAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayIndex__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayIndex__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayIndex__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayIndexAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getArrayIndexAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsElementParserRuleCall_0()); }
		ruleElement
		{ after(grammarAccess.getModelAccess().getElementsElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__ComponentRulesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getComponentRulesComponentRulesParserRuleCall_3_0()); }
		ruleComponentRules
		{ after(grammarAccess.getComponentAccess().getComponentRulesComponentRulesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Budget__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBudgetAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBudgetAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Budget__QualityDefinitionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBudgetAccess().getQualityDefinitionsSingleQualityDefParserRuleCall_3_0()); }
		ruleSingleQualityDef
		{ after(grammarAccess.getBudgetAccess().getQualityDefinitionsSingleQualityDefParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataChannel__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataChannelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDataChannelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataChannel__QualityDefinitionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataChannelAccess().getQualityDefinitionsSingleQualityDefParserRuleCall_3_0()); }
		ruleSingleQualityDef
		{ after(grammarAccess.getDataChannelAccess().getQualityDefinitionsSingleQualityDefParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSystemAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__SubComponentsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getSubComponentsSubComponentPredicateParserRuleCall_3_0_0()); }
		ruleSubComponentPredicate
		{ after(grammarAccess.getSystemAccess().getSubComponentsSubComponentPredicateParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__IndependentPredicatesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getIndependentPredicatesIndependentPredicateParserRuleCall_3_1_0()); }
		ruleIndependentPredicate
		{ after(grammarAccess.getSystemAccess().getIndependentPredicatesIndependentPredicateParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleQualityDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleQualityDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSingleQualityDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configurations__ConfigurationAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationsAccess().getConfigurationConfigurationParserRuleCall_0()); }
		ruleConfiguration
		{ after(grammarAccess.getConfigurationsAccess().getConfigurationConfigurationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultConfiguration__ConfigBodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefaultConfigurationAccess().getConfigBodyConfigurationBodyParserRuleCall_1_0()); }
		ruleConfigurationBody
		{ after(grammarAccess.getDefaultConfigurationAccess().getConfigBodyConfigurationBodyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConfigurationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__ConfigBodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationAccess().getConfigBodyConfigurationBodyParserRuleCall_3_0()); }
		ruleConfigurationBody
		{ after(grammarAccess.getConfigurationAccess().getConfigBodyConfigurationBodyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationBody__SupportsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationBodyAccess().getSupportsSupportsPredicateParserRuleCall_1_0_0()); }
		ruleSupportsPredicate
		{ after(grammarAccess.getConfigurationBodyAccess().getSupportsSupportsPredicateParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationBody__RequiresAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationBodyAccess().getRequiresRequiresPredicateParserRuleCall_1_1_0()); }
		ruleRequiresPredicate
		{ after(grammarAccess.getConfigurationBodyAccess().getRequiresRequiresPredicateParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationBody__InputsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationBodyAccess().getInputsInputsPredicateParserRuleCall_1_2_0()); }
		ruleInputsPredicate
		{ after(grammarAccess.getConfigurationBodyAccess().getInputsInputsPredicateParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationBody__OutputsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationBodyAccess().getOutputsOutputsPredicateParserRuleCall_1_3_0()); }
		ruleOutputsPredicate
		{ after(grammarAccess.getConfigurationBodyAccess().getOutputsOutputsPredicateParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationBody__QualitiesAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationBodyAccess().getQualitiesQualityPredicateParserRuleCall_1_4_0()); }
		ruleQualityPredicate
		{ after(grammarAccess.getConfigurationBodyAccess().getQualitiesQualityPredicateParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationBody__IndependentPredicatesAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationBodyAccess().getIndependentPredicatesIndependentPredicateParserRuleCall_1_5_0()); }
		ruleIndependentPredicate
		{ after(grammarAccess.getConfigurationBodyAccess().getIndependentPredicatesIndependentPredicateParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationBody__SubComponentsAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationBodyAccess().getSubComponentsSubComponentPredicateParserRuleCall_1_6_0()); }
		ruleSubComponentPredicate
		{ after(grammarAccess.getConfigurationBodyAccess().getSubComponentsSubComponentPredicateParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsPredicate__EnvironmentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSupportsPredicateAccess().getEnvironmentBudgetCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSupportsPredicateAccess().getEnvironmentBudgetIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSupportsPredicateAccess().getEnvironmentBudgetIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSupportsPredicateAccess().getEnvironmentBudgetCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsPredicate__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSupportsPredicateAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getSupportsPredicateAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsPredicate__ArrayAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSupportsPredicateAccess().getArrayArrayIndexParserRuleCall_3_0()); }
		ruleArrayIndex
		{ after(grammarAccess.getSupportsPredicateAccess().getArrayArrayIndexParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportsPredicate__PredicatesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSupportsPredicateAccess().getPredicatesPredicateBlockParserRuleCall_4_0()); }
		rulePredicateBlock
		{ after(grammarAccess.getSupportsPredicateAccess().getPredicatesPredicateBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresPredicate__EnvironmentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequiresPredicateAccess().getEnvironmentBudgetCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRequiresPredicateAccess().getEnvironmentBudgetIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRequiresPredicateAccess().getEnvironmentBudgetIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRequiresPredicateAccess().getEnvironmentBudgetCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresPredicate__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequiresPredicateAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getRequiresPredicateAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresPredicate__ArrayAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequiresPredicateAccess().getArrayArrayIndexParserRuleCall_3_0()); }
		ruleArrayIndex
		{ after(grammarAccess.getRequiresPredicateAccess().getArrayArrayIndexParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresPredicate__PredicatesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequiresPredicateAccess().getPredicatesPredicateBlockParserRuleCall_4_0()); }
		rulePredicateBlock
		{ after(grammarAccess.getRequiresPredicateAccess().getPredicatesPredicateBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputsPredicate__ChannelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputsPredicateAccess().getChannelDataChannelCrossReference_1_0()); }
		(
			{ before(grammarAccess.getInputsPredicateAccess().getChannelDataChannelIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInputsPredicateAccess().getChannelDataChannelIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getInputsPredicateAccess().getChannelDataChannelCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputsPredicate__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputsPredicateAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getInputsPredicateAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputsPredicate__ArrayAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputsPredicateAccess().getArrayArrayIndexParserRuleCall_3_0()); }
		ruleArrayIndex
		{ after(grammarAccess.getInputsPredicateAccess().getArrayArrayIndexParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputsPredicate__PredicatesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputsPredicateAccess().getPredicatesPredicateBlockParserRuleCall_4_0()); }
		rulePredicateBlock
		{ after(grammarAccess.getInputsPredicateAccess().getPredicatesPredicateBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputsPredicate__ChannelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputsPredicateAccess().getChannelDataChannelCrossReference_1_0()); }
		(
			{ before(grammarAccess.getOutputsPredicateAccess().getChannelDataChannelIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOutputsPredicateAccess().getChannelDataChannelIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getOutputsPredicateAccess().getChannelDataChannelCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputsPredicate__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputsPredicateAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getOutputsPredicateAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputsPredicate__ArrayAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputsPredicateAccess().getArrayArrayIndexParserRuleCall_3_0()); }
		ruleArrayIndex
		{ after(grammarAccess.getOutputsPredicateAccess().getArrayArrayIndexParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputsPredicate__PredicatesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputsPredicateAccess().getPredicatesPredicateBlockParserRuleCall_4_0()); }
		rulePredicateBlock
		{ after(grammarAccess.getOutputsPredicateAccess().getPredicatesPredicateBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateBlock__PredicatesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateBlockAccess().getPredicatesPredicateParserRuleCall_2_0_0()); }
		rulePredicate
		{ after(grammarAccess.getPredicateBlockAccess().getPredicatesPredicateParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateBlock__PredicatesAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateBlockAccess().getPredicatesPredicateParserRuleCall_2_1_1_0()); }
		rulePredicate
		{ after(grammarAccess.getPredicateBlockAccess().getPredicatesPredicateParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponentPredicate__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubComponentPredicateAccess().getTypeComponentCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSubComponentPredicateAccess().getTypeComponentIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSubComponentPredicateAccess().getTypeComponentIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSubComponentPredicateAccess().getTypeComponentCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponentPredicate__NameAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubComponentPredicateAccess().getNameIDTerminalRuleCall_2_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSubComponentPredicateAccess().getNameIDTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponentPredicate__ArrayAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubComponentPredicateAccess().getArrayArrayIndexParserRuleCall_2_1_0()); }
		ruleArrayIndex
		{ after(grammarAccess.getSubComponentPredicateAccess().getArrayArrayIndexParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualityDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getQualityDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityDeclaration__ExprAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualityDeclarationAccess().getExprExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getQualityDeclarationAccess().getExprExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__ArrayAssignment_2_1_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getArrayAlternatives_2_1_0_0_2_0()); }
		(rule__Predicate__ArrayAlternatives_2_1_0_0_2_0)
		{ after(grammarAccess.getPredicateAccess().getArrayAlternatives_2_1_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__HostAssignment_2_1_0_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getHostQualityExpressionParserRuleCall_2_1_0_1_3_0()); }
		ruleQualityExpression
		{ after(grammarAccess.getPredicateAccess().getHostQualityExpressionParserRuleCall_2_1_0_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__ConsumerAssignment_2_1_0_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getConsumerQualityExpressionParserRuleCall_2_1_0_2_3_0()); }
		ruleQualityExpression
		{ after(grammarAccess.getPredicateAccess().getConsumerQualityExpressionParserRuleCall_2_1_0_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__OpAssignment_2_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getOpMultiplicative_OperatorParserRuleCall_2_1_1_0_1_0()); }
		ruleMultiplicative_Operator
		{ after(grammarAccess.getPredicateAccess().getOpMultiplicative_OperatorParserRuleCall_2_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__RightAssignment_2_1_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getRightMultiplicativeExpressionParserRuleCall_2_1_1_0_2_0()); }
		ruleMultiplicativeExpression
		{ after(grammarAccess.getPredicateAccess().getRightMultiplicativeExpressionParserRuleCall_2_1_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__OpAssignment_2_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getOpAdditive_OperatorParserRuleCall_2_1_1_1_1_0()); }
		ruleAdditive_Operator
		{ after(grammarAccess.getPredicateAccess().getOpAdditive_OperatorParserRuleCall_2_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__RightAssignment_2_1_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getRightAdditiveExpressionParserRuleCall_2_1_1_1_2_0()); }
		ruleAdditiveExpression
		{ after(grammarAccess.getPredicateAccess().getRightAdditiveExpressionParserRuleCall_2_1_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__OpAssignment_2_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getOpComparison_OperatorParserRuleCall_2_1_1_2_1_0()); }
		ruleComparison_Operator
		{ after(grammarAccess.getPredicateAccess().getOpComparison_OperatorParserRuleCall_2_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__RightAssignment_2_1_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getRightExpressionParserRuleCall_2_1_1_2_2_0()); }
		ruleExpression
		{ after(grammarAccess.getPredicateAccess().getRightExpressionParserRuleCall_2_1_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__OpAssignment_2_1_1_2_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getOpLogical_Binary_OperatorParserRuleCall_2_1_1_2_3_0_1_0()); }
		ruleLogical_Binary_Operator
		{ after(grammarAccess.getPredicateAccess().getOpLogical_Binary_OperatorParserRuleCall_2_1_1_2_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__RightAssignment_2_1_1_2_3_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getRightBoolExpressionParserRuleCall_2_1_1_2_3_0_2_0()); }
		ruleBoolExpression
		{ after(grammarAccess.getPredicateAccess().getRightBoolExpressionParserRuleCall_2_1_1_2_3_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__ConsequentAssignment_2_1_1_2_3_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getConsequentPredicateParserRuleCall_2_1_1_2_3_1_2_0()); }
		rulePredicate
		{ after(grammarAccess.getPredicateAccess().getConsequentPredicateParserRuleCall_2_1_1_2_3_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__OpAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getOpComparison_OperatorParserRuleCall_3_1_1_0()); }
		ruleComparison_Operator
		{ after(grammarAccess.getPredicateAccess().getOpComparison_OperatorParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__RightAssignment_3_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getRightExpressionParserRuleCall_3_1_2_0()); }
		ruleExpression
		{ after(grammarAccess.getPredicateAccess().getRightExpressionParserRuleCall_3_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__ConsequentAssignment_3_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getConsequentPredicateParserRuleCall_3_2_2_0()); }
		rulePredicate
		{ after(grammarAccess.getPredicateAccess().getConsequentPredicateParserRuleCall_3_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__SubPredicatesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndPredicateAccess().getSubPredicatesPredicateParserRuleCall_2_0()); }
		rulePredicate
		{ after(grammarAccess.getAndPredicateAccess().getSubPredicatesPredicateParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndPredicate__SubPredicatesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndPredicateAccess().getSubPredicatesPredicateParserRuleCall_3_1_0()); }
		rulePredicate
		{ after(grammarAccess.getAndPredicateAccess().getSubPredicatesPredicateParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__SubPredicatesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrPredicateAccess().getSubPredicatesPredicateParserRuleCall_2_0()); }
		rulePredicate
		{ after(grammarAccess.getOrPredicateAccess().getSubPredicatesPredicateParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPredicate__SubPredicatesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrPredicateAccess().getSubPredicatesPredicateParserRuleCall_3_1_0()); }
		rulePredicate
		{ after(grammarAccess.getOrPredicateAccess().getSubPredicatesPredicateParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolExpressionAccess().getOpLogical_Binary_OperatorParserRuleCall_1_1_0()); }
		ruleLogical_Binary_Operator
		{ after(grammarAccess.getBoolExpressionAccess().getOpLogical_Binary_OperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolExpressionAccess().getRightComparisonExpressionParserRuleCall_1_2_0()); }
		ruleComparisonExpression
		{ after(grammarAccess.getBoolExpressionAccess().getRightComparisonExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getLeftExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getComparisonExpressionAccess().getLeftExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__OperatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOperatorComparison_OperatorParserRuleCall_1_0()); }
		ruleComparison_Operator
		{ after(grammarAccess.getComparisonExpressionAccess().getOperatorComparison_OperatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getRightExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getComparisonExpressionAccess().getRightExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOpAdditive_OperatorParserRuleCall_1_1_0()); }
		ruleAdditive_Operator
		{ after(grammarAccess.getAdditiveExpressionAccess().getOpAdditive_OperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0()); }
		ruleMultiplicativeExpression
		{ after(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionNotStartingWithQualityExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getOpAdditive_OperatorParserRuleCall_1_1_0()); }
		ruleAdditive_Operator
		{ after(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getOpAdditive_OperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionNotStartingWithQualityExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0()); }
		ruleMultiplicativeExpression
		{ after(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpMultiplicative_OperatorParserRuleCall_1_1_0()); }
		ruleMultiplicative_Operator
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpMultiplicative_OperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightTermParserRuleCall_1_2_0()); }
		ruleTerm
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightTermParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionNotStartingWithQualityExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getOpMultiplicative_OperatorParserRuleCall_1_1_0()); }
		ruleMultiplicative_Operator
		{ after(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getOpMultiplicative_OperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionNotStartingWithQualityExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getRightTermParserRuleCall_1_2_0()); }
		ruleTerm
		{ after(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getRightTermParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__FunctionCallAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallExpressionAccess().getFunctionCallIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getCallExpressionAccess().getFunctionCallIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__ParamsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallExpressionAccess().getParamsExpressionParserRuleCall_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getCallExpressionAccess().getParamsExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__ParamsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallExpressionAccess().getParamsExpressionParserRuleCall_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getCallExpressionAccess().getParamsExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineArrayExpression__ItemsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInlineArrayExpressionAccess().getItemsExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getInlineArrayExpressionAccess().getItemsExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineArrayExpression__ItemsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInlineArrayExpressionAccess().getItemsExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getInlineArrayExpressionAccess().getItemsExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineObjectExpression__PropertiesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInlineObjectExpressionAccess().getPropertiesPropertyDeclarationParserRuleCall_1_0()); }
		rulePropertyDeclaration
		{ after(grammarAccess.getInlineObjectExpressionAccess().getPropertiesPropertyDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineObjectExpression__PropertiesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInlineObjectExpressionAccess().getPropertiesPropertyDeclarationParserRuleCall_2_1_0()); }
		rulePropertyDeclaration
		{ after(grammarAccess.getInlineObjectExpressionAccess().getPropertiesPropertyDeclarationParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyDeclarationAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getPropertyDeclarationAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketedExpression__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBracketedExpressionAccess().getExprSubExpressionParserRuleCall_1_0()); }
		ruleSubExpression
		{ after(grammarAccess.getBracketedExpressionAccess().getExprSubExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOpUnary_OperatorParserRuleCall_0_0()); }
		ruleUnary_Operator
		{ after(grammarAccess.getUnaryExpressionAccess().getOpUnary_OperatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getExprTermParserRuleCall_1_0()); }
		ruleTerm
		{ after(grammarAccess.getUnaryExpressionAccess().getExprTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityExpression__QualityNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualityExpressionAccess().getQualityNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getQualityExpressionAccess().getQualityNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityExpression__PropertyNameAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualityExpressionAccess().getPropertyNameIDTerminalRuleCall_1_0_2_0()); }
		RULE_ID
		{ after(grammarAccess.getQualityExpressionAccess().getPropertyNameIDTerminalRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityExpression__IndexAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualityExpressionAccess().getIndexArrayIndexParserRuleCall_1_1_1_0()); }
		ruleArrayIndex
		{ after(grammarAccess.getQualityExpressionAccess().getIndexArrayIndexParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayIndex__ArrayExprAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayIndexAccess().getArrayExprSubExpressionParserRuleCall_1_0_0()); }
		ruleSubExpression
		{ after(grammarAccess.getArrayIndexAccess().getArrayExprSubExpressionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayIndex__AnyIndexAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayIndexAccess().getAnyIndexFullStopFullStopFullStopKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getArrayIndexAccess().getAnyIndexFullStopFullStopFullStopKeyword_1_1_0()); }
			'...'
			{ after(grammarAccess.getArrayIndexAccess().getAnyIndexFullStopFullStopFullStopKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getArrayIndexAccess().getAnyIndexFullStopFullStopFullStopKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__TextAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralAccess().getTextSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralAccess().getTextSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
