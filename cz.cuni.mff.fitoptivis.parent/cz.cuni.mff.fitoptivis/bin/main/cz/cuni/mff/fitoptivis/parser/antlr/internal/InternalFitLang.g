/*
 * generated by Xtext 2.18.0.M3
 */
grammar InternalFitLang;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package cz.cuni.mff.fitoptivis.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package cz.cuni.mff.fitoptivis.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import cz.cuni.mff.fitoptivis.services.FitLangGrammarAccess;

}

@parser::members {

 	private FitLangGrammarAccess grammarAccess;

    public InternalFitLangParser(TokenStream input, FitLangGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected FitLangGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getElementsElementParserRuleCall_0());
			}
			lv_elements_0_0=ruleElement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"cz.cuni.mff.fitoptivis.FitLang.Element");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleComparison_Operator
entryRuleComparison_Operator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getComparison_OperatorRule()); }
	iv_ruleComparison_Operator=ruleComparison_Operator
	{ $current=$iv_ruleComparison_Operator.current.getText(); }
	EOF;

// Rule Comparison_Operator
ruleComparison_Operator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparison_OperatorAccess().getEqualsSignEqualsSignKeyword_0());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparison_OperatorAccess().getLessThanSignKeyword_1());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparison_OperatorAccess().getGreaterThanSignKeyword_2());
		}
		    |
		kw='<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparison_OperatorAccess().getLessThanSignEqualsSignKeyword_3());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparison_OperatorAccess().getGreaterThanSignEqualsSignKeyword_4());
		}
		    |
		kw='!='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparison_OperatorAccess().getExclamationMarkEqualsSignKeyword_5());
		}
	)
;

// Entry rule entryRuleLogical_Binary_Operator
entryRuleLogical_Binary_Operator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLogical_Binary_OperatorRule()); }
	iv_ruleLogical_Binary_Operator=ruleLogical_Binary_Operator
	{ $current=$iv_ruleLogical_Binary_Operator.current.getText(); }
	EOF;

// Rule Logical_Binary_Operator
ruleLogical_Binary_Operator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='&&'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLogical_Binary_OperatorAccess().getAmpersandAmpersandKeyword_0());
		}
		    |
		kw='||'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLogical_Binary_OperatorAccess().getVerticalLineVerticalLineKeyword_1());
		}
	)
;

// Entry rule entryRuleMultiplicative_Operator
entryRuleMultiplicative_Operator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicative_OperatorRule()); }
	iv_ruleMultiplicative_Operator=ruleMultiplicative_Operator
	{ $current=$iv_ruleMultiplicative_Operator.current.getText(); }
	EOF;

// Rule Multiplicative_Operator
ruleMultiplicative_Operator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMultiplicative_OperatorAccess().getAsteriskKeyword_0());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMultiplicative_OperatorAccess().getSolidusKeyword_1());
		}
	)
;

// Entry rule entryRuleAdditive_Operator
entryRuleAdditive_Operator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAdditive_OperatorRule()); }
	iv_ruleAdditive_Operator=ruleAdditive_Operator
	{ $current=$iv_ruleAdditive_Operator.current.getText(); }
	EOF;

// Rule Additive_Operator
ruleAdditive_Operator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAdditive_OperatorAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAdditive_OperatorAccess().getHyphenMinusKeyword_1());
		}
	)
;

// Entry rule entryRuleUnary_Operator
entryRuleUnary_Operator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnary_OperatorRule()); }
	iv_ruleUnary_Operator=ruleUnary_Operator
	{ $current=$iv_ruleUnary_Operator.current.getText(); }
	EOF;

// Rule Unary_Operator
ruleUnary_Operator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnary_OperatorAccess().getHyphenMinusKeyword_0());
		}
		    |
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnary_OperatorAccess().getPlusSignKeyword_1());
		}
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getComponentParserRuleCall_0());
		}
		this_Component_0=ruleComponent
		{
			$current = $this_Component_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getBudgetParserRuleCall_1());
		}
		this_Budget_1=ruleBudget
		{
			$current = $this_Budget_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getDataChannelParserRuleCall_2());
		}
		this_DataChannel_2=ruleDataChannel
		{
			$current = $this_DataChannel_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getSystemParserRuleCall_3());
		}
		this_System_3=ruleSystem
		{
			$current = $this_System_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='component'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentAccess().getComponentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentAccess().getComponentRulesComponentRulesParserRuleCall_3_0());
				}
				lv_componentRules_3_0=ruleComponentRules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRule());
					}
					set(
						$current,
						"componentRules",
						lv_componentRules_3_0,
						"cz.cuni.mff.fitoptivis.FitLang.ComponentRules");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleBudget
entryRuleBudget returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBudgetRule()); }
	iv_ruleBudget=ruleBudget
	{ $current=$iv_ruleBudget.current; }
	EOF;

// Rule Budget
ruleBudget returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='budget'
		{
			newLeafNode(otherlv_0, grammarAccess.getBudgetAccess().getBudgetKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBudgetAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBudgetRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBudgetAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBudgetAccess().getQualityDefinitionsSingleQualityDefParserRuleCall_3_0());
				}
				lv_qualityDefinitions_3_0=ruleSingleQualityDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBudgetRule());
					}
					add(
						$current,
						"qualityDefinitions",
						lv_qualityDefinitions_3_0,
						"cz.cuni.mff.fitoptivis.FitLang.SingleQualityDef");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getBudgetAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDataChannel
entryRuleDataChannel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataChannelRule()); }
	iv_ruleDataChannel=ruleDataChannel
	{ $current=$iv_ruleDataChannel.current; }
	EOF;

// Rule DataChannel
ruleDataChannel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='channel'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataChannelAccess().getChannelKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataChannelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataChannelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataChannelAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataChannelAccess().getQualityDefinitionsSingleQualityDefParserRuleCall_3_0());
				}
				lv_qualityDefinitions_3_0=ruleSingleQualityDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataChannelRule());
					}
					add(
						$current,
						"qualityDefinitions",
						lv_qualityDefinitions_3_0,
						"cz.cuni.mff.fitoptivis.FitLang.SingleQualityDef");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getDataChannelAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSystem
entryRuleSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemRule()); }
	iv_ruleSystem=ruleSystem
	{ $current=$iv_ruleSystem.current; }
	EOF;

// Rule System
ruleSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemAccess().getSystemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSystemAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSystemAccess().getSubComponentsSubComponentPredicateParserRuleCall_3_0_0());
					}
					lv_subComponents_3_0=ruleSubComponentPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSystemRule());
						}
						add(
							$current,
							"subComponents",
							lv_subComponents_3_0,
							"cz.cuni.mff.fitoptivis.FitLang.SubComponentPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSystemAccess().getIndependentPredicatesIndependentPredicateParserRuleCall_3_1_0());
					}
					lv_independentPredicates_4_0=ruleIndependentPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSystemRule());
						}
						add(
							$current,
							"independentPredicates",
							lv_independentPredicates_4_0,
							"cz.cuni.mff.fitoptivis.FitLang.IndependentPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSingleQualityDef
entryRuleSingleQualityDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleQualityDefRule()); }
	iv_ruleSingleQualityDef=ruleSingleQualityDef
	{ $current=$iv_ruleSingleQualityDef.current; }
	EOF;

// Rule SingleQualityDef
ruleSingleQualityDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='quality'
		{
			newLeafNode(otherlv_0, grammarAccess.getSingleQualityDefAccess().getQualityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSingleQualityDefAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleQualityDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getSingleQualityDefAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleComponentRules
entryRuleComponentRules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRulesRule()); }
	iv_ruleComponentRules=ruleComponentRules
	{ $current=$iv_ruleComponentRules.current; }
	EOF;

// Rule ComponentRules
ruleComponentRules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComponentRulesAccess().getConfigurationsParserRuleCall_0());
		}
		this_Configurations_0=ruleConfigurations
		{
			$current = $this_Configurations_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentRulesAccess().getDefaultConfigurationParserRuleCall_1());
		}
		this_DefaultConfiguration_1=ruleDefaultConfiguration
		{
			$current = $this_DefaultConfiguration_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConfigurations
entryRuleConfigurations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigurationsRule()); }
	iv_ruleConfigurations=ruleConfigurations
	{ $current=$iv_ruleConfigurations.current; }
	EOF;

// Rule Configurations
ruleConfigurations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getConfigurationsAccess().getConfigurationConfigurationParserRuleCall_0());
			}
			lv_configuration_0_0=ruleConfiguration
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getConfigurationsRule());
				}
				add(
					$current,
					"configuration",
					lv_configuration_0_0,
					"cz.cuni.mff.fitoptivis.FitLang.Configuration");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleDefaultConfiguration
entryRuleDefaultConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefaultConfigurationRule()); }
	iv_ruleDefaultConfiguration=ruleDefaultConfiguration
	{ $current=$iv_ruleDefaultConfiguration.current; }
	EOF;

// Rule DefaultConfiguration
ruleDefaultConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDefaultConfigurationAccess().getConfigurationAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDefaultConfigurationAccess().getConfigBodyConfigurationBodyParserRuleCall_1_0());
				}
				lv_configBody_1_0=ruleConfigurationBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefaultConfigurationRule());
					}
					set(
						$current,
						"configBody",
						lv_configBody_1_0,
						"cz.cuni.mff.fitoptivis.FitLang.ConfigurationBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConfiguration
entryRuleConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigurationRule()); }
	iv_ruleConfiguration=ruleConfiguration
	{ $current=$iv_ruleConfiguration.current; }
	EOF;

// Rule Configuration
ruleConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='configuration'
		{
			newLeafNode(otherlv_0, grammarAccess.getConfigurationAccess().getConfigurationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getConfigurationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConfigurationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationAccess().getConfigBodyConfigurationBodyParserRuleCall_3_0());
				}
				lv_configBody_3_0=ruleConfigurationBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationRule());
					}
					set(
						$current,
						"configBody",
						lv_configBody_3_0,
						"cz.cuni.mff.fitoptivis.FitLang.ConfigurationBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleConfigurationBody
entryRuleConfigurationBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigurationBodyRule()); }
	iv_ruleConfigurationBody=ruleConfigurationBody
	{ $current=$iv_ruleConfigurationBody.current; }
	EOF;

// Rule ConfigurationBody
ruleConfigurationBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConfigurationBodyAccess().getConfigurationBodyAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigurationBodyAccess().getSupportsSupportsPredicateParserRuleCall_1_0_0());
					}
					lv_supports_1_0=ruleSupportsPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigurationBodyRule());
						}
						add(
							$current,
							"supports",
							lv_supports_1_0,
							"cz.cuni.mff.fitoptivis.FitLang.SupportsPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigurationBodyAccess().getRequiresRequiresPredicateParserRuleCall_1_1_0());
					}
					lv_requires_2_0=ruleRequiresPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigurationBodyRule());
						}
						add(
							$current,
							"requires",
							lv_requires_2_0,
							"cz.cuni.mff.fitoptivis.FitLang.RequiresPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigurationBodyAccess().getInputsInputsPredicateParserRuleCall_1_2_0());
					}
					lv_inputs_3_0=ruleInputsPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigurationBodyRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_3_0,
							"cz.cuni.mff.fitoptivis.FitLang.InputsPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigurationBodyAccess().getOutputsOutputsPredicateParserRuleCall_1_3_0());
					}
					lv_outputs_4_0=ruleOutputsPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigurationBodyRule());
						}
						add(
							$current,
							"outputs",
							lv_outputs_4_0,
							"cz.cuni.mff.fitoptivis.FitLang.OutputsPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigurationBodyAccess().getQualitiesQualityPredicateParserRuleCall_1_4_0());
					}
					lv_qualities_5_0=ruleQualityPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigurationBodyRule());
						}
						add(
							$current,
							"qualities",
							lv_qualities_5_0,
							"cz.cuni.mff.fitoptivis.FitLang.QualityPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigurationBodyAccess().getIndependentPredicatesIndependentPredicateParserRuleCall_1_5_0());
					}
					lv_independentPredicates_6_0=ruleIndependentPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigurationBodyRule());
						}
						add(
							$current,
							"independentPredicates",
							lv_independentPredicates_6_0,
							"cz.cuni.mff.fitoptivis.FitLang.IndependentPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigurationBodyAccess().getSubComponentsSubComponentPredicateParserRuleCall_1_6_0());
					}
					lv_subComponents_7_0=ruleSubComponentPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigurationBodyRule());
						}
						add(
							$current,
							"subComponents",
							lv_subComponents_7_0,
							"cz.cuni.mff.fitoptivis.FitLang.SubComponentPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSupportsPredicate
entryRuleSupportsPredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSupportsPredicateRule()); }
	iv_ruleSupportsPredicate=ruleSupportsPredicate
	{ $current=$iv_ruleSupportsPredicate.current; }
	EOF;

// Rule SupportsPredicate
ruleSupportsPredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='supports'
		{
			newLeafNode(otherlv_0, grammarAccess.getSupportsPredicateAccess().getSupportsKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSupportsPredicateRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getSupportsPredicateAccess().getEnvironmentBudgetCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getSupportsPredicateAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSupportsPredicateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSupportsPredicateAccess().getArrayArrayIndexParserRuleCall_3_0());
				}
				lv_array_3_0=ruleArrayIndex
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSupportsPredicateRule());
					}
					set(
						$current,
						"array",
						lv_array_3_0,
						"cz.cuni.mff.fitoptivis.FitLang.ArrayIndex");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSupportsPredicateAccess().getPredicatesPredicateBlockParserRuleCall_4_0());
				}
				lv_predicates_4_0=rulePredicateBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSupportsPredicateRule());
					}
					set(
						$current,
						"predicates",
						lv_predicates_4_0,
						"cz.cuni.mff.fitoptivis.FitLang.PredicateBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getSupportsPredicateAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleRequiresPredicate
entryRuleRequiresPredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequiresPredicateRule()); }
	iv_ruleRequiresPredicate=ruleRequiresPredicate
	{ $current=$iv_ruleRequiresPredicate.current; }
	EOF;

// Rule RequiresPredicate
ruleRequiresPredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='requires'
		{
			newLeafNode(otherlv_0, grammarAccess.getRequiresPredicateAccess().getRequiresKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRequiresPredicateRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getRequiresPredicateAccess().getEnvironmentBudgetCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getRequiresPredicateAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRequiresPredicateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRequiresPredicateAccess().getArrayArrayIndexParserRuleCall_3_0());
				}
				lv_array_3_0=ruleArrayIndex
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequiresPredicateRule());
					}
					set(
						$current,
						"array",
						lv_array_3_0,
						"cz.cuni.mff.fitoptivis.FitLang.ArrayIndex");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRequiresPredicateAccess().getPredicatesPredicateBlockParserRuleCall_4_0());
				}
				lv_predicates_4_0=rulePredicateBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequiresPredicateRule());
					}
					set(
						$current,
						"predicates",
						lv_predicates_4_0,
						"cz.cuni.mff.fitoptivis.FitLang.PredicateBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getRequiresPredicateAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleInputsPredicate
entryRuleInputsPredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputsPredicateRule()); }
	iv_ruleInputsPredicate=ruleInputsPredicate
	{ $current=$iv_ruleInputsPredicate.current; }
	EOF;

// Rule InputsPredicate
ruleInputsPredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='inputs'
		{
			newLeafNode(otherlv_0, grammarAccess.getInputsPredicateAccess().getInputsKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputsPredicateRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getInputsPredicateAccess().getChannelDataChannelCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getInputsPredicateAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputsPredicateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInputsPredicateAccess().getArrayArrayIndexParserRuleCall_3_0());
				}
				lv_array_3_0=ruleArrayIndex
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputsPredicateRule());
					}
					set(
						$current,
						"array",
						lv_array_3_0,
						"cz.cuni.mff.fitoptivis.FitLang.ArrayIndex");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getInputsPredicateAccess().getPredicatesPredicateBlockParserRuleCall_4_0());
				}
				lv_predicates_4_0=rulePredicateBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputsPredicateRule());
					}
					set(
						$current,
						"predicates",
						lv_predicates_4_0,
						"cz.cuni.mff.fitoptivis.FitLang.PredicateBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getInputsPredicateAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleOutputsPredicate
entryRuleOutputsPredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputsPredicateRule()); }
	iv_ruleOutputsPredicate=ruleOutputsPredicate
	{ $current=$iv_ruleOutputsPredicate.current; }
	EOF;

// Rule OutputsPredicate
ruleOutputsPredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='outputs'
		{
			newLeafNode(otherlv_0, grammarAccess.getOutputsPredicateAccess().getOutputsKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutputsPredicateRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getOutputsPredicateAccess().getChannelDataChannelCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getOutputsPredicateAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutputsPredicateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputsPredicateAccess().getArrayArrayIndexParserRuleCall_3_0());
				}
				lv_array_3_0=ruleArrayIndex
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputsPredicateRule());
					}
					set(
						$current,
						"array",
						lv_array_3_0,
						"cz.cuni.mff.fitoptivis.FitLang.ArrayIndex");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputsPredicateAccess().getPredicatesPredicateBlockParserRuleCall_4_0());
				}
				lv_predicates_4_0=rulePredicateBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputsPredicateRule());
					}
					set(
						$current,
						"predicates",
						lv_predicates_4_0,
						"cz.cuni.mff.fitoptivis.FitLang.PredicateBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getOutputsPredicateAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRulePredicateBlock
entryRulePredicateBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredicateBlockRule()); }
	iv_rulePredicateBlock=rulePredicateBlock
	{ $current=$iv_rulePredicateBlock.current; }
	EOF;

// Rule PredicateBlock
rulePredicateBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPredicateBlockAccess().getPredicateBlockAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getPredicateBlockAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPredicateBlockAccess().getPredicatesPredicateParserRuleCall_2_0_0());
					}
					lv_predicates_2_0=rulePredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPredicateBlockRule());
						}
						add(
							$current,
							"predicates",
							lv_predicates_2_0,
							"cz.cuni.mff.fitoptivis.FitLang.Predicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=';'
				{
					newLeafNode(otherlv_3, grammarAccess.getPredicateBlockAccess().getSemicolonKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPredicateBlockAccess().getPredicatesPredicateParserRuleCall_2_1_1_0());
						}
						lv_predicates_4_0=rulePredicate
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPredicateBlockRule());
							}
							add(
								$current,
								"predicates",
								lv_predicates_4_0,
								"cz.cuni.mff.fitoptivis.FitLang.Predicate");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				otherlv_5=';'
				{
					newLeafNode(otherlv_5, grammarAccess.getPredicateBlockAccess().getSemicolonKeyword_2_2());
				}
			)?
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getPredicateBlockAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleIndependentPredicate
entryRuleIndependentPredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndependentPredicateRule()); }
	iv_ruleIndependentPredicate=ruleIndependentPredicate
	{ $current=$iv_ruleIndependentPredicate.current; }
	EOF;

// Rule IndependentPredicate
ruleIndependentPredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIndependentPredicateAccess().getPredicateParserRuleCall_0());
		}
		this_Predicate_0=rulePredicate
		{
			$current = $this_Predicate_0.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_1=';'
		{
			newLeafNode(otherlv_1, grammarAccess.getIndependentPredicateAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleQualityPredicate
entryRuleQualityPredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQualityPredicateRule()); }
	iv_ruleQualityPredicate=ruleQualityPredicate
	{ $current=$iv_ruleQualityPredicate.current; }
	EOF;

// Rule QualityPredicate
ruleQualityPredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getQualityPredicateAccess().getQualityDeclarationParserRuleCall());
	}
	this_QualityDeclaration_0=ruleQualityDeclaration
	{
		$current = $this_QualityDeclaration_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleSubComponentPredicate
entryRuleSubComponentPredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubComponentPredicateRule()); }
	iv_ruleSubComponentPredicate=ruleSubComponentPredicate
	{ $current=$iv_ruleSubComponentPredicate.current; }
	EOF;

// Rule SubComponentPredicate
ruleSubComponentPredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='component'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubComponentPredicateAccess().getComponentKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubComponentPredicateRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getSubComponentPredicateAccess().getTypeComponentCrossReference_1_0());
				}
			)
		)
		(
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getSubComponentPredicateAccess().getNameIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSubComponentPredicateRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSubComponentPredicateAccess().getArrayArrayIndexParserRuleCall_2_1_0());
					}
					lv_array_3_0=ruleArrayIndex
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubComponentPredicateRule());
						}
						set(
							$current,
							"array",
							lv_array_3_0,
							"cz.cuni.mff.fitoptivis.FitLang.ArrayIndex");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)?
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getSubComponentPredicateAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleQualityDeclaration
entryRuleQualityDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQualityDeclarationRule()); }
	iv_ruleQualityDeclaration=ruleQualityDeclaration
	{ $current=$iv_ruleQualityDeclaration.current; }
	EOF;

// Rule QualityDeclaration
ruleQualityDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='quality'
		{
			newLeafNode(otherlv_0, grammarAccess.getQualityDeclarationAccess().getQualityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getQualityDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQualityDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getQualityDeclarationAccess().getEqualsSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQualityDeclarationAccess().getExprExpressionParserRuleCall_2_1_0());
					}
					lv_expr_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQualityDeclarationRule());
						}
						set(
							$current,
							"expr",
							lv_expr_3_0,
							"cz.cuni.mff.fitoptivis.FitLang.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getQualityDeclarationAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRulePredicate
entryRulePredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredicateRule()); }
	iv_rulePredicate=rulePredicate
	{ $current=$iv_rulePredicate.current; }
	EOF;

// Rule Predicate
rulePredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPredicateAccess().getAndPredicateParserRuleCall_0());
		}
		this_AndPredicate_0=ruleAndPredicate
		{
			$current = $this_AndPredicate_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPredicateAccess().getOrPredicateParserRuleCall_1());
		}
		this_OrPredicate_1=ruleOrPredicate
		{
			$current = $this_OrPredicate_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getPredicateAccess().getQualityExpressionParserRuleCall_2_0());
			}
			this_QualityExpression_2=ruleQualityExpression
			{
				$current = $this_QualityExpression_2.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getPredicateAccess().getInPredicateQualityAction_2_1_0_0_0(),
									$current);
							}
						)
						otherlv_4='in'
						{
							newLeafNode(otherlv_4, grammarAccess.getPredicateAccess().getInKeyword_2_1_0_0_1());
						}
						(
							(
								(
									{
										newCompositeNode(grammarAccess.getPredicateAccess().getArraySubExpressionParserRuleCall_2_1_0_0_2_0_0());
									}
									lv_array_5_1=ruleSubExpression
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getPredicateRule());
										}
										set(
											$current,
											"array",
											lv_array_5_1,
											"cz.cuni.mff.fitoptivis.FitLang.SubExpression");
										afterParserOrEnumRuleCall();
									}
									    |
									{
										newCompositeNode(grammarAccess.getPredicateAccess().getArrayInlineArrayExpressionParserRuleCall_2_1_0_0_2_0_1());
									}
									lv_array_5_2=ruleInlineArrayExpression
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getPredicateRule());
										}
										set(
											$current,
											"array",
											lv_array_5_2,
											"cz.cuni.mff.fitoptivis.FitLang.InlineArrayExpression");
										afterParserOrEnumRuleCall();
									}
								)
							)
						)
					)
					    |
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getPredicateAccess().getRunsOnPredicateGuestAction_2_1_0_1_0(),
									$current);
							}
						)
						otherlv_7='runs'
						{
							newLeafNode(otherlv_7, grammarAccess.getPredicateAccess().getRunsKeyword_2_1_0_1_1());
						}
						otherlv_8='on'
						{
							newLeafNode(otherlv_8, grammarAccess.getPredicateAccess().getOnKeyword_2_1_0_1_2());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getPredicateAccess().getHostQualityExpressionParserRuleCall_2_1_0_1_3_0());
								}
								lv_host_9_0=ruleQualityExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPredicateRule());
									}
									set(
										$current,
										"host",
										lv_host_9_0,
										"cz.cuni.mff.fitoptivis.FitLang.QualityExpression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
					    |
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getPredicateAccess().getOutputsToPredicateProducerAction_2_1_0_2_0(),
									$current);
							}
						)
						otherlv_11='outputs'
						{
							newLeafNode(otherlv_11, grammarAccess.getPredicateAccess().getOutputsKeyword_2_1_0_2_1());
						}
						otherlv_12='to'
						{
							newLeafNode(otherlv_12, grammarAccess.getPredicateAccess().getToKeyword_2_1_0_2_2());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getPredicateAccess().getConsumerQualityExpressionParserRuleCall_2_1_0_2_3_0());
								}
								lv_consumer_13_0=ruleQualityExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPredicateRule());
									}
									set(
										$current,
										"consumer",
										lv_consumer_13_0,
										"cz.cuni.mff.fitoptivis.FitLang.QualityExpression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)
				    |
				(
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getPredicateAccess().getMultiplicativeExpressionLeftAction_2_1_1_0_0(),
									$current);
							}
						)
						(
							(
								{
									newCompositeNode(grammarAccess.getPredicateAccess().getOpMultiplicative_OperatorParserRuleCall_2_1_1_0_1_0());
								}
								lv_op_15_0=ruleMultiplicative_Operator
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPredicateRule());
									}
									set(
										$current,
										"op",
										lv_op_15_0,
										"cz.cuni.mff.fitoptivis.FitLang.Multiplicative_Operator");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							(
								{
									newCompositeNode(grammarAccess.getPredicateAccess().getRightMultiplicativeExpressionParserRuleCall_2_1_1_0_2_0());
								}
								lv_right_16_0=ruleMultiplicativeExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPredicateRule());
									}
									set(
										$current,
										"right",
										lv_right_16_0,
										"cz.cuni.mff.fitoptivis.FitLang.MultiplicativeExpression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)?
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getPredicateAccess().getAdditiveExpressionLeftAction_2_1_1_1_0(),
									$current);
							}
						)
						(
							(
								{
									newCompositeNode(grammarAccess.getPredicateAccess().getOpAdditive_OperatorParserRuleCall_2_1_1_1_1_0());
								}
								lv_op_18_0=ruleAdditive_Operator
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPredicateRule());
									}
									set(
										$current,
										"op",
										lv_op_18_0,
										"cz.cuni.mff.fitoptivis.FitLang.Additive_Operator");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							(
								{
									newCompositeNode(grammarAccess.getPredicateAccess().getRightAdditiveExpressionParserRuleCall_2_1_1_1_2_0());
								}
								lv_right_19_0=ruleAdditiveExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPredicateRule());
									}
									set(
										$current,
										"right",
										lv_right_19_0,
										"cz.cuni.mff.fitoptivis.FitLang.AdditiveExpression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)?
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getPredicateAccess().getBoolExpressionLeftAction_2_1_1_2_0(),
									$current);
							}
						)
						(
							(
								{
									newCompositeNode(grammarAccess.getPredicateAccess().getOpComparison_OperatorParserRuleCall_2_1_1_2_1_0());
								}
								lv_op_21_0=ruleComparison_Operator
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPredicateRule());
									}
									set(
										$current,
										"op",
										lv_op_21_0,
										"cz.cuni.mff.fitoptivis.FitLang.Comparison_Operator");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							(
								{
									newCompositeNode(grammarAccess.getPredicateAccess().getRightExpressionParserRuleCall_2_1_1_2_2_0());
								}
								lv_right_22_0=ruleExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPredicateRule());
									}
									set(
										$current,
										"right",
										lv_right_22_0,
										"cz.cuni.mff.fitoptivis.FitLang.Expression");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							(
								(
									{
										$current = forceCreateModelElementAndSet(
											grammarAccess.getPredicateAccess().getBoolExpressionLeftAction_2_1_1_2_3_0_0(),
											$current);
									}
								)
								(
									(
										{
											newCompositeNode(grammarAccess.getPredicateAccess().getOpLogical_Binary_OperatorParserRuleCall_2_1_1_2_3_0_1_0());
										}
										lv_op_24_0=ruleLogical_Binary_Operator
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPredicateRule());
											}
											set(
												$current,
												"op",
												lv_op_24_0,
												"cz.cuni.mff.fitoptivis.FitLang.Logical_Binary_Operator");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									(
										{
											newCompositeNode(grammarAccess.getPredicateAccess().getRightBoolExpressionParserRuleCall_2_1_1_2_3_0_2_0());
										}
										lv_right_25_0=ruleBoolExpression
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPredicateRule());
											}
											set(
												$current,
												"right",
												lv_right_25_0,
												"cz.cuni.mff.fitoptivis.FitLang.BoolExpression");
											afterParserOrEnumRuleCall();
										}
									)
								)
							)?
							(
								(
									{
										$current = forceCreateModelElementAndSet(
											grammarAccess.getPredicateAccess().getImplicationPredicateAntecedentAction_2_1_1_2_3_1_0(),
											$current);
									}
								)
								otherlv_27='=>'
								{
									newLeafNode(otherlv_27, grammarAccess.getPredicateAccess().getEqualsSignGreaterThanSignKeyword_2_1_1_2_3_1_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPredicateAccess().getConsequentPredicateParserRuleCall_2_1_1_2_3_1_2_0());
										}
										lv_consequent_28_0=rulePredicate
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPredicateRule());
											}
											set(
												$current,
												"consequent",
												lv_consequent_28_0,
												"cz.cuni.mff.fitoptivis.FitLang.Predicate");
											afterParserOrEnumRuleCall();
										}
									)
								)
							)?
						)
					)
				)
			)
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getPredicateAccess().getExpressionNotStartingWithQualityExpressionParserRuleCall_3_0());
			}
			this_ExpressionNotStartingWithQualityExpression_29=ruleExpressionNotStartingWithQualityExpression
			{
				$current = $this_ExpressionNotStartingWithQualityExpression_29.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getPredicateAccess().getBoolExpressionLeftAction_3_1_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPredicateAccess().getOpComparison_OperatorParserRuleCall_3_1_1_0());
						}
						lv_op_31_0=ruleComparison_Operator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPredicateRule());
							}
							set(
								$current,
								"op",
								lv_op_31_0,
								"cz.cuni.mff.fitoptivis.FitLang.Comparison_Operator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPredicateAccess().getRightExpressionParserRuleCall_3_1_2_0());
						}
						lv_right_32_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPredicateRule());
							}
							set(
								$current,
								"right",
								lv_right_32_0,
								"cz.cuni.mff.fitoptivis.FitLang.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getPredicateAccess().getImplicationPredicateAntecedentAction_3_2_0(),
							$current);
					}
				)
				otherlv_34='=>'
				{
					newLeafNode(otherlv_34, grammarAccess.getPredicateAccess().getEqualsSignGreaterThanSignKeyword_3_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPredicateAccess().getConsequentPredicateParserRuleCall_3_2_2_0());
						}
						lv_consequent_35_0=rulePredicate
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPredicateRule());
							}
							set(
								$current,
								"consequent",
								lv_consequent_35_0,
								"cz.cuni.mff.fitoptivis.FitLang.Predicate");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
	)
;

// Entry rule entryRuleAndPredicate
entryRuleAndPredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndPredicateRule()); }
	iv_ruleAndPredicate=ruleAndPredicate
	{ $current=$iv_ruleAndPredicate.current; }
	EOF;

// Rule AndPredicate
ruleAndPredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='all'
		{
			newLeafNode(otherlv_0, grammarAccess.getAndPredicateAccess().getAllKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getAndPredicateAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAndPredicateAccess().getSubPredicatesPredicateParserRuleCall_2_0());
				}
				lv_subPredicates_2_0=rulePredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndPredicateRule());
					}
					add(
						$current,
						"subPredicates",
						lv_subPredicates_2_0,
						"cz.cuni.mff.fitoptivis.FitLang.Predicate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getAndPredicateAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndPredicateAccess().getSubPredicatesPredicateParserRuleCall_3_1_0());
					}
					lv_subPredicates_4_0=rulePredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndPredicateRule());
						}
						add(
							$current,
							"subPredicates",
							lv_subPredicates_4_0,
							"cz.cuni.mff.fitoptivis.FitLang.Predicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getAndPredicateAccess().getCommaKeyword_4());
			}
		)?
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getAndPredicateAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleOrPredicate
entryRuleOrPredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrPredicateRule()); }
	iv_ruleOrPredicate=ruleOrPredicate
	{ $current=$iv_ruleOrPredicate.current; }
	EOF;

// Rule OrPredicate
ruleOrPredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='any'
		{
			newLeafNode(otherlv_0, grammarAccess.getOrPredicateAccess().getAnyKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getOrPredicateAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrPredicateAccess().getSubPredicatesPredicateParserRuleCall_2_0());
				}
				lv_subPredicates_2_0=rulePredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrPredicateRule());
					}
					add(
						$current,
						"subPredicates",
						lv_subPredicates_2_0,
						"cz.cuni.mff.fitoptivis.FitLang.Predicate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getOrPredicateAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrPredicateAccess().getSubPredicatesPredicateParserRuleCall_3_1_0());
					}
					lv_subPredicates_4_0=rulePredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrPredicateRule());
						}
						add(
							$current,
							"subPredicates",
							lv_subPredicates_4_0,
							"cz.cuni.mff.fitoptivis.FitLang.Predicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getOrPredicateAccess().getCommaKeyword_4());
			}
		)?
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getOrPredicateAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleBoolExpression
entryRuleBoolExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolExpressionRule()); }
	iv_ruleBoolExpression=ruleBoolExpression
	{ $current=$iv_ruleBoolExpression.current; }
	EOF;

// Rule BoolExpression
ruleBoolExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBoolExpressionAccess().getComparisonExpressionParserRuleCall_0());
		}
		this_ComparisonExpression_0=ruleComparisonExpression
		{
			$current = $this_ComparisonExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getBoolExpressionAccess().getBoolExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBoolExpressionAccess().getOpLogical_Binary_OperatorParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleLogical_Binary_Operator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoolExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"cz.cuni.mff.fitoptivis.FitLang.Logical_Binary_Operator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBoolExpressionAccess().getRightComparisonExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleComparisonExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoolExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"cz.cuni.mff.fitoptivis.FitLang.ComparisonExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleComparisonExpression
entryRuleComparisonExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonExpressionRule()); }
	iv_ruleComparisonExpression=ruleComparisonExpression
	{ $current=$iv_ruleComparisonExpression.current; }
	EOF;

// Rule ComparisonExpression
ruleComparisonExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComparisonExpressionAccess().getLeftExpressionParserRuleCall_0_0());
				}
				lv_left_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
					}
					set(
						$current,
						"left",
						lv_left_0_0,
						"cz.cuni.mff.fitoptivis.FitLang.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComparisonExpressionAccess().getOperatorComparison_OperatorParserRuleCall_1_0());
				}
				lv_operator_1_0=ruleComparison_Operator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
					}
					set(
						$current,
						"operator",
						lv_operator_1_0,
						"cz.cuni.mff.fitoptivis.FitLang.Comparison_Operator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComparisonExpressionAccess().getRightExpressionParserRuleCall_2_0());
				}
				lv_right_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
					}
					set(
						$current,
						"right",
						lv_right_2_0,
						"cz.cuni.mff.fitoptivis.FitLang.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getSubExpressionParserRuleCall_0());
		}
		this_SubExpression_0=ruleSubExpression
		{
			$current = $this_SubExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getInlineArrayExpressionParserRuleCall_1());
		}
		this_InlineArrayExpression_1=ruleInlineArrayExpression
		{
			$current = $this_InlineArrayExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getInlineObjectExpressionParserRuleCall_2());
		}
		this_InlineObjectExpression_2=ruleInlineObjectExpression
		{
			$current = $this_InlineObjectExpression_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpressionNotStartingWithQualityExpression
entryRuleExpressionNotStartingWithQualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionNotStartingWithQualityExpressionRule()); }
	iv_ruleExpressionNotStartingWithQualityExpression=ruleExpressionNotStartingWithQualityExpression
	{ $current=$iv_ruleExpressionNotStartingWithQualityExpression.current; }
	EOF;

// Rule ExpressionNotStartingWithQualityExpression
ruleExpressionNotStartingWithQualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionNotStartingWithQualityExpressionAccess().getSubExpressionNotStartingWithQualityExpressionParserRuleCall_0());
		}
		this_SubExpressionNotStartingWithQualityExpression_0=ruleSubExpressionNotStartingWithQualityExpression
		{
			$current = $this_SubExpressionNotStartingWithQualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionNotStartingWithQualityExpressionAccess().getInlineArrayExpressionParserRuleCall_1());
		}
		this_InlineArrayExpression_1=ruleInlineArrayExpression
		{
			$current = $this_InlineArrayExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionNotStartingWithQualityExpressionAccess().getInlineObjectExpressionParserRuleCall_2());
		}
		this_InlineObjectExpression_2=ruleInlineObjectExpression
		{
			$current = $this_InlineObjectExpression_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSubExpression
entryRuleSubExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubExpressionRule()); }
	iv_ruleSubExpression=ruleSubExpression
	{ $current=$iv_ruleSubExpression.current; }
	EOF;

// Rule SubExpression
ruleSubExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getSubExpressionAccess().getAdditiveExpressionParserRuleCall());
	}
	this_AdditiveExpression_0=ruleAdditiveExpression
	{
		$current = $this_AdditiveExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleSubExpressionNotStartingWithQualityExpression
entryRuleSubExpressionNotStartingWithQualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubExpressionNotStartingWithQualityExpressionRule()); }
	iv_ruleSubExpressionNotStartingWithQualityExpression=ruleSubExpressionNotStartingWithQualityExpression
	{ $current=$iv_ruleSubExpressionNotStartingWithQualityExpression.current; }
	EOF;

// Rule SubExpressionNotStartingWithQualityExpression
ruleSubExpressionNotStartingWithQualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getSubExpressionNotStartingWithQualityExpressionAccess().getAdditiveExpressionNotStartingWithQualityExpressionParserRuleCall());
	}
	this_AdditiveExpressionNotStartingWithQualityExpression_0=ruleAdditiveExpressionNotStartingWithQualityExpression
	{
		$current = $this_AdditiveExpressionNotStartingWithQualityExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	iv_ruleAdditiveExpression=ruleAdditiveExpression
	{ $current=$iv_ruleAdditiveExpression.current; }
	EOF;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0());
		}
		this_MultiplicativeExpression_0=ruleMultiplicativeExpression
		{
			$current = $this_MultiplicativeExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOpAdditive_OperatorParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleAdditive_Operator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"cz.cuni.mff.fitoptivis.FitLang.Additive_Operator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleMultiplicativeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"cz.cuni.mff.fitoptivis.FitLang.MultiplicativeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAdditiveExpressionNotStartingWithQualityExpression
entryRuleAdditiveExpressionNotStartingWithQualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionRule()); }
	iv_ruleAdditiveExpressionNotStartingWithQualityExpression=ruleAdditiveExpressionNotStartingWithQualityExpression
	{ $current=$iv_ruleAdditiveExpressionNotStartingWithQualityExpression.current; }
	EOF;

// Rule AdditiveExpressionNotStartingWithQualityExpression
ruleAdditiveExpressionNotStartingWithQualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getMultiplicativeExpressionNotStartingWithQualityExpressionParserRuleCall_0());
		}
		this_MultiplicativeExpressionNotStartingWithQualityExpression_0=ruleMultiplicativeExpressionNotStartingWithQualityExpression
		{
			$current = $this_MultiplicativeExpressionNotStartingWithQualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getAdditiveExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getOpAdditive_OperatorParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleAdditive_Operator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"cz.cuni.mff.fitoptivis.FitLang.Additive_Operator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleMultiplicativeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionNotStartingWithQualityExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"cz.cuni.mff.fitoptivis.FitLang.MultiplicativeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression
	{ $current=$iv_ruleMultiplicativeExpression.current; }
	EOF;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getTermParserRuleCall_0());
		}
		this_Term_0=ruleTerm
		{
			$current = $this_Term_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOpMultiplicative_OperatorParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleMultiplicative_Operator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"cz.cuni.mff.fitoptivis.FitLang.Multiplicative_Operator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightTermParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"cz.cuni.mff.fitoptivis.FitLang.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplicativeExpressionNotStartingWithQualityExpression
entryRuleMultiplicativeExpressionNotStartingWithQualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionRule()); }
	iv_ruleMultiplicativeExpressionNotStartingWithQualityExpression=ruleMultiplicativeExpressionNotStartingWithQualityExpression
	{ $current=$iv_ruleMultiplicativeExpressionNotStartingWithQualityExpression.current; }
	EOF;

// Rule MultiplicativeExpressionNotStartingWithQualityExpression
ruleMultiplicativeExpressionNotStartingWithQualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getNonQualityExpressionTermParserRuleCall_0());
		}
		this_NonQualityExpressionTerm_0=ruleNonQualityExpressionTerm
		{
			$current = $this_NonQualityExpressionTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getMultiplicativeExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getOpMultiplicative_OperatorParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleMultiplicative_Operator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"cz.cuni.mff.fitoptivis.FitLang.Multiplicative_Operator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionAccess().getRightTermParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionNotStartingWithQualityExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"cz.cuni.mff.fitoptivis.FitLang.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	iv_ruleTerm=ruleTerm
	{ $current=$iv_ruleTerm.current; }
	EOF;

// Rule Term
ruleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTermAccess().getBracketedExpressionParserRuleCall_0());
		}
		this_BracketedExpression_0=ruleBracketedExpression
		{
			$current = $this_BracketedExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getUnaryExpressionParserRuleCall_1());
		}
		this_UnaryExpression_1=ruleUnaryExpression
		{
			$current = $this_UnaryExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getQualityExpressionParserRuleCall_2());
		}
		this_QualityExpression_2=ruleQualityExpression
		{
			$current = $this_QualityExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getLiteralParserRuleCall_3());
		}
		this_Literal_3=ruleLiteral
		{
			$current = $this_Literal_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getCallExpressionParserRuleCall_4());
		}
		this_CallExpression_4=ruleCallExpression
		{
			$current = $this_CallExpression_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNonQualityExpressionTerm
entryRuleNonQualityExpressionTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonQualityExpressionTermRule()); }
	iv_ruleNonQualityExpressionTerm=ruleNonQualityExpressionTerm
	{ $current=$iv_ruleNonQualityExpressionTerm.current; }
	EOF;

// Rule NonQualityExpressionTerm
ruleNonQualityExpressionTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNonQualityExpressionTermAccess().getBracketedExpressionParserRuleCall_0());
		}
		this_BracketedExpression_0=ruleBracketedExpression
		{
			$current = $this_BracketedExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonQualityExpressionTermAccess().getUnaryExpressionParserRuleCall_1());
		}
		this_UnaryExpression_1=ruleUnaryExpression
		{
			$current = $this_UnaryExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonQualityExpressionTermAccess().getLiteralParserRuleCall_2());
		}
		this_Literal_2=ruleLiteral
		{
			$current = $this_Literal_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonQualityExpressionTermAccess().getCallExpressionParserRuleCall_3());
		}
		this_CallExpression_3=ruleCallExpression
		{
			$current = $this_CallExpression_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCallExpression
entryRuleCallExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallExpressionRule()); }
	iv_ruleCallExpression=ruleCallExpression
	{ $current=$iv_ruleCallExpression.current; }
	EOF;

// Rule CallExpression
ruleCallExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_functionCall_0_0=RULE_ID
				{
					newLeafNode(lv_functionCall_0_0, grammarAccess.getCallExpressionAccess().getFunctionCallIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCallExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"functionCall",
						lv_functionCall_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCallExpressionAccess().getParamsExpressionParserRuleCall_2_0_0());
					}
					lv_params_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCallExpressionRule());
						}
						add(
							$current,
							"params",
							lv_params_2_0,
							"cz.cuni.mff.fitoptivis.FitLang.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getCallExpressionAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCallExpressionAccess().getParamsExpressionParserRuleCall_2_1_1_0());
						}
						lv_params_4_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCallExpressionRule());
							}
							add(
								$current,
								"params",
								lv_params_4_0,
								"cz.cuni.mff.fitoptivis.FitLang.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleInlineArrayExpression
entryRuleInlineArrayExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInlineArrayExpressionRule()); }
	iv_ruleInlineArrayExpression=ruleInlineArrayExpression
	{ $current=$iv_ruleInlineArrayExpression.current; }
	EOF;

// Rule InlineArrayExpression
ruleInlineArrayExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getInlineArrayExpressionAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInlineArrayExpressionAccess().getItemsExpressionParserRuleCall_1_0());
				}
				lv_items_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInlineArrayExpressionRule());
					}
					add(
						$current,
						"items",
						lv_items_1_0,
						"cz.cuni.mff.fitoptivis.FitLang.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getInlineArrayExpressionAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInlineArrayExpressionAccess().getItemsExpressionParserRuleCall_2_1_0());
					}
					lv_items_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInlineArrayExpressionRule());
						}
						add(
							$current,
							"items",
							lv_items_3_0,
							"cz.cuni.mff.fitoptivis.FitLang.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getInlineArrayExpressionAccess().getCommaKeyword_3());
			}
		)?
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getInlineArrayExpressionAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleInlineObjectExpression
entryRuleInlineObjectExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInlineObjectExpressionRule()); }
	iv_ruleInlineObjectExpression=ruleInlineObjectExpression
	{ $current=$iv_ruleInlineObjectExpression.current; }
	EOF;

// Rule InlineObjectExpression
ruleInlineObjectExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getInlineObjectExpressionAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInlineObjectExpressionAccess().getPropertiesPropertyDeclarationParserRuleCall_1_0());
				}
				lv_properties_1_0=rulePropertyDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInlineObjectExpressionRule());
					}
					add(
						$current,
						"properties",
						lv_properties_1_0,
						"cz.cuni.mff.fitoptivis.FitLang.PropertyDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getInlineObjectExpressionAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInlineObjectExpressionAccess().getPropertiesPropertyDeclarationParserRuleCall_2_1_0());
					}
					lv_properties_3_0=rulePropertyDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInlineObjectExpressionRule());
						}
						add(
							$current,
							"properties",
							lv_properties_3_0,
							"cz.cuni.mff.fitoptivis.FitLang.PropertyDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getInlineObjectExpressionAccess().getCommaKeyword_3());
			}
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getInlineObjectExpressionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulePropertyDeclaration
entryRulePropertyDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyDeclarationRule()); }
	iv_rulePropertyDeclaration=rulePropertyDeclaration
	{ $current=$iv_rulePropertyDeclaration.current; }
	EOF;

// Rule PropertyDeclaration
rulePropertyDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPropertyDeclarationAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPropertyDeclarationAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyDeclarationAccess().getValueExpressionParserRuleCall_2_0());
				}
				lv_value_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyDeclarationRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"cz.cuni.mff.fitoptivis.FitLang.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBracketedExpression
entryRuleBracketedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBracketedExpressionRule()); }
	iv_ruleBracketedExpression=ruleBracketedExpression
	{ $current=$iv_ruleBracketedExpression.current; }
	EOF;

// Rule BracketedExpression
ruleBracketedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getBracketedExpressionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBracketedExpressionAccess().getExprSubExpressionParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleSubExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBracketedExpressionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"cz.cuni.mff.fitoptivis.FitLang.SubExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getBracketedExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	iv_ruleUnaryExpression=ruleUnaryExpression
	{ $current=$iv_ruleUnaryExpression.current; }
	EOF;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpUnary_OperatorParserRuleCall_0_0());
				}
				lv_op_0_0=ruleUnary_Operator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
					}
					set(
						$current,
						"op",
						lv_op_0_0,
						"cz.cuni.mff.fitoptivis.FitLang.Unary_Operator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprTermParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"cz.cuni.mff.fitoptivis.FitLang.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleQualityExpression
entryRuleQualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQualityExpressionRule()); }
	iv_ruleQualityExpression=ruleQualityExpression
	{ $current=$iv_ruleQualityExpression.current; }
	EOF;

// Rule QualityExpression
ruleQualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_qualityName_0_0=RULE_ID
				{
					newLeafNode(lv_qualityName_0_0, grammarAccess.getQualityExpressionAccess().getQualityNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQualityExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"qualityName",
						lv_qualityName_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getQualityExpressionAccess().getPropertyAccessExpressionObjectAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='.'
				{
					newLeafNode(otherlv_2, grammarAccess.getQualityExpressionAccess().getFullStopKeyword_1_0_1());
				}
				(
					(
						lv_propertyName_3_0=RULE_ID
						{
							newLeafNode(lv_propertyName_3_0, grammarAccess.getQualityExpressionAccess().getPropertyNameIDTerminalRuleCall_1_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getQualityExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"propertyName",
								lv_propertyName_3_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getQualityExpressionAccess().getArrayAccessExpressionArrayAction_1_1_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getQualityExpressionAccess().getIndexArrayIndexParserRuleCall_1_1_1_0());
						}
						lv_index_5_0=ruleArrayIndex
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getQualityExpressionRule());
							}
							set(
								$current,
								"index",
								lv_index_5_0,
								"cz.cuni.mff.fitoptivis.FitLang.ArrayIndex");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleArrayIndex
entryRuleArrayIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayIndexRule()); }
	iv_ruleArrayIndex=ruleArrayIndex
	{ $current=$iv_ruleArrayIndex.current; }
	EOF;

// Rule ArrayIndex
ruleArrayIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getArrayIndexAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayIndexAccess().getArrayExprSubExpressionParserRuleCall_1_0_0());
					}
					lv_arrayExpr_1_0=ruleSubExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayIndexRule());
						}
						set(
							$current,
							"arrayExpr",
							lv_arrayExpr_1_0,
							"cz.cuni.mff.fitoptivis.FitLang.SubExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_anyIndex_2_0='...'
					{
						newLeafNode(lv_anyIndex_2_0, grammarAccess.getArrayIndexAccess().getAnyIndexFullStopFullStopFullStopKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArrayIndexRule());
						}
						setWithLastConsumed($current, "anyIndex", true, "...");
					}
				)
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getArrayIndexAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_0());
		}
		this_IntLiteral_0=ruleIntLiteral
		{
			$current = $this_IntLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_1());
		}
		this_StringLiteral_1=ruleStringLiteral
		{
			$current = $this_StringLiteral_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntLiteral
entryRuleIntLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntLiteralRule()); }
	iv_ruleIntLiteral=ruleIntLiteral
	{ $current=$iv_ruleIntLiteral.current; }
	EOF;

// Rule IntLiteral
ruleIntLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_text_0_0=RULE_STRING
			{
				newLeafNode(lv_text_0_0, grammarAccess.getStringLiteralAccess().getTextSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"text",
					lv_text_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
